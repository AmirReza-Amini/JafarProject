[{"E:\\Negin\\Client\\src\\index.js":"1","E:\\Negin\\Client\\src\\registerServiceWorker.js":"2","E:\\Negin\\Client\\src\\redux\\store.js":"3","E:\\Negin\\Client\\src\\app\\app.js":"4","E:\\Negin\\Client\\src\\components\\spinner\\spinner.js":"5","E:\\Negin\\Client\\src\\redux\\rootReducer.js":"6","E:\\Negin\\Client\\src\\app\\router.js":"7","E:\\Negin\\Client\\src\\redux\\customizer\\index.js":"8","E:\\Negin\\Client\\src\\redux\\todo\\index.js":"9","E:\\Negin\\Client\\src\\redux\\common\\voyage\\voyageReducer.js":"10","E:\\Negin\\Client\\src\\redux\\common\\operator\\operatorReducer.js":"11","E:\\Negin\\Client\\src\\redux\\common\\equipment\\equipmentReducer.js":"12","E:\\Negin\\Client\\src\\redux\\common\\damage\\damageReducer.js":"13","E:\\Negin\\Client\\src\\layouts\\routes\\errorRoutes.js":"14","E:\\Negin\\Client\\src\\layouts\\routes\\logoutRoutes.js":"15","E:\\Negin\\Client\\src\\layouts\\routes\\mainRoutes.js":"16","E:\\Negin\\Client\\src\\views\\pages\\maintainance.js":"17","E:\\Negin\\Client\\src\\views\\pages\\error.js":"18","E:\\Negin\\Client\\src\\views\\dashboard\\ecommerceDashboard.js":"19","E:\\Negin\\Client\\src\\layouts\\routes\\loginRoutes.jsx":"20","E:\\Negin\\Client\\src\\views\\pages\\logoutPage.jsx":"21","E:\\Negin\\Client\\src\\views\\pages\\loginPage.jsx":"22","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\countriesPage.jsx":"23","E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageTariffPage.jsx":"24","E:\\Negin\\Client\\src\\views\\pages\\usersPage.jsx":"25","E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionTariffPage.jsx":"26","E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionInvoiceList.jsx":"27","E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageBillPage.jsx":"28","E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionBillPage.jsx":"29","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\vesselsPage.jsx":"30","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\shippingLinesPage.jsx":"31","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\voyagesPage.jsx":"32","E:\\Negin\\Client\\src\\redux\\common\\damage\\damageTypes.js":"33","E:\\Negin\\Client\\src\\layouts\\errorLayout.js":"34","E:\\Negin\\Client\\src\\layouts\\mainLayout.js":"35","E:\\Negin\\Client\\src\\layouts\\logoutLayout.js":"36","E:\\Negin\\Client\\src\\services\\authService.js":"37","E:\\Negin\\Client\\src\\components\\cards\\projectStatsDonutChartCard.js":"38","E:\\Negin\\Client\\src\\components\\cards\\weeklyStatisticsLineChartCard.js":"39","E:\\Negin\\Client\\src\\components\\cards\\userListCard.js":"40","E:\\Negin\\Client\\src\\components\\cards\\visitSalesStatistics.js":"41","E:\\Negin\\Client\\src\\components\\cards\\hobbiesStatisticsBarChartCard.js":"42","E:\\Negin\\Client\\src\\services\\countryService.js":"43","E:\\Negin\\Client\\src\\services\\vesselStoppageService.js":"44","E:\\Negin\\Client\\src\\services\\userType.js":"45","E:\\Negin\\Client\\src\\services\\permission.js":"46","E:\\Negin\\Client\\src\\services\\garbageCollectionService.js":"47","E:\\Negin\\Client\\src\\services\\voyageService.js":"48","E:\\Negin\\Client\\src\\services\\shippingLineService.js":"49","E:\\Negin\\Client\\src\\layouts\\loginLayout.jsx":"50","E:\\Negin\\Client\\src\\services\\vesselService.js":"51","E:\\Negin\\Client\\src\\services\\portServices.js":"52","E:\\Negin\\Client\\src\\components\\common\\formik\\FormikControl.jsx":"53","E:\\Negin\\Client\\src\\templateConfig.js":"54","E:\\Negin\\Client\\src\\layouts\\components\\footer\\footer.js":"55","E:\\Negin\\Client\\src\\services\\httpService.js":"56","E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidebar.js":"57","E:\\Negin\\Client\\src\\layouts\\components\\navbar\\navbar.js":"58","E:\\Negin\\Client\\src\\utility\\context\\toggleContentContext.js":"59","E:\\Negin\\Client\\src\\utility\\tools.js":"60","E:\\Negin\\Client\\src\\services\\user.js":"61","E:\\Negin\\Client\\src\\services\\area.js":"62","E:\\Negin\\Client\\src\\components\\cards\\monthlySalesStatisticsBarChartCard.js":"63","E:\\Negin\\Client\\src\\components\\cards\\productsSalesChartCard.js":"64","E:\\Negin\\Client\\src\\components\\cards\\shoppingCartCard.js":"65","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomCheckboxGroup.jsx":"66","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomSwitch.jsx":"67","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomDateTimePicker.jsx":"68","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomButtonGroup.jsx":"69","E:\\Negin\\Client\\src\\components\\common\\formik\\InputMaskDebounce.jsx":"70","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomSelect.jsx":"71","E:\\Negin\\Client\\src\\components\\common\\formik\\Select.jsx":"72","E:\\Negin\\Client\\src\\components\\common\\formik\\RadioButtons.jsx":"73","E:\\Negin\\Client\\src\\components\\common\\formik\\Textarea.jsx":"74","E:\\Negin\\Client\\src\\components\\common\\formik\\Input.jsx":"75","E:\\Negin\\Client\\src\\components\\common\\formik\\CheckboxGroup.jsx":"76","E:\\Negin\\Client\\src\\redux\\customizer\\customizerActions.js":"77","E:\\Negin\\Client\\src\\components\\common\\formik\\TextError.jsx":"78","E:\\Negin\\Client\\src\\components\\search\\Search.js":"79","E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidebarHeader\\sidebarHeader.js":"80","E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidemenu\\sidemenu.js":"81","E:\\Negin\\Client\\src\\components\\customizer\\customizer.js":"82","E:\\Negin\\Client\\src\\redux\\common\\equipment\\equipmentTypes.js":"83","E:\\Negin\\Client\\src\\components\\cards\\minimalStatisticsWithChartCard.js":"84","E:\\Negin\\Client\\src\\redux\\common\\operator\\operatorTypes.js":"85","E:\\Negin\\Client\\src\\redux\\common\\voyage\\voyageTypes.js":"86","E:\\Negin\\Client\\src\\views\\cards\\advancedCardData.js":"87","E:\\Negin\\Client\\src\\views\\cards\\staticCardData.js":"88","E:\\Negin\\Client\\src\\redux\\todo\\editTodo.js":"89","E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidemenuHelper.js":"90","E:\\Negin\\Client\\src\\mockData\\menuList.jsx":"91","E:\\Negin\\Client\\src\\redux\\todo\\todoSearch.js":"92","E:\\Negin\\Client\\src\\redux\\todo\\todoVisibilityFilter.js":"93","E:\\Negin\\Client\\src\\redux\\todo\\todoDetails.js":"94","E:\\Negin\\Client\\src\\redux\\todo\\todo.js":"95","E:\\Negin\\Client\\src\\redux\\customizer\\sidebarSize.js":"96","E:\\Negin\\Client\\src\\redux\\customizer\\sidebarCollapsed.js":"97","E:\\Negin\\Client\\src\\redux\\customizer\\sidebarImageUrl.js":"98","E:\\Negin\\Client\\src\\redux\\customizer\\sidebarImage.js":"99","E:\\Negin\\Client\\src\\redux\\customizer\\sidebarBgColor.js":"100","E:\\Negin\\Client\\src\\redux\\todo\\todoActions.js":"101","E:\\Negin\\Client\\src\\redux\\todo\\todoData.js":"102","E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageInvoiceList.jsx":"103","E:\\Negin\\Client\\src\\views\\pages\\Tree.jsx":"104"},{"size":989,"mtime":1600674599673,"results":"105","hashOfConfig":"106"},{"size":4819,"mtime":1600674599720,"results":"107","hashOfConfig":"106"},{"size":536,"mtime":1600674599710,"results":"108","hashOfConfig":"106"},{"size":383,"mtime":1608543029121,"results":"109","hashOfConfig":"106"},{"size":445,"mtime":1600674599648,"results":"110","hashOfConfig":"106"},{"size":767,"mtime":1600674599710,"results":"111","hashOfConfig":"106"},{"size":7599,"mtime":1608534003641,"results":"112","hashOfConfig":"106"},{"size":518,"mtime":1600674599705,"results":"113","hashOfConfig":"106"},{"size":371,"mtime":1600674599712,"results":"114","hashOfConfig":"106"},{"size":935,"mtime":1600674599702,"results":"115","hashOfConfig":"106"},{"size":879,"mtime":1600674599700,"results":"116","hashOfConfig":"106"},{"size":1077,"mtime":1600674599696,"results":"117","hashOfConfig":"106"},{"size":728,"mtime":1600674599693,"results":"118","hashOfConfig":"106"},{"size":417,"mtime":1600674599688,"results":"119","hashOfConfig":"106"},{"size":435,"mtime":1600674599690,"results":"120","hashOfConfig":"106"},{"size":2192,"mtime":1608534003644,"results":"121","hashOfConfig":"106"},{"size":2393,"mtime":1600674599981,"results":"122","hashOfConfig":"106"},{"size":3823,"mtime":1600674599972,"results":"123","hashOfConfig":"106"},{"size":340,"mtime":1608543103127,"results":"124","hashOfConfig":"106"},{"size":417,"mtime":1600674599689,"results":"125","hashOfConfig":"106"},{"size":294,"mtime":1600674599980,"results":"126","hashOfConfig":"106"},{"size":5794,"mtime":1601899972195,"results":"127","hashOfConfig":"106"},{"size":3091,"mtime":1607168777737,"results":"128","hashOfConfig":"106"},{"size":6305,"mtime":1607168777772,"results":"129","hashOfConfig":"106"},{"size":26544,"mtime":1608534003652,"results":"130","hashOfConfig":"106"},{"size":6206,"mtime":1607168777770,"results":"131","hashOfConfig":"106"},{"size":5398,"mtime":1608534003648,"results":"132","hashOfConfig":"106"},{"size":8472,"mtime":1607168777772,"results":"133","hashOfConfig":"106"},{"size":8507,"mtime":1607168777769,"results":"134","hashOfConfig":"106"},{"size":26529,"mtime":1607847920667,"results":"135","hashOfConfig":"106"},{"size":24749,"mtime":1607168777738,"results":"136","hashOfConfig":"106"},{"size":34162,"mtime":1607950853888,"results":"137","hashOfConfig":"106"},{"size":180,"mtime":1600674599694,"results":"138","hashOfConfig":"106"},{"size":428,"mtime":1600674599684,"results":"139","hashOfConfig":"106"},{"size":3210,"mtime":1600674599686,"results":"140","hashOfConfig":"106"},{"size":189,"mtime":1600674599686,"results":"141","hashOfConfig":"106"},{"size":1424,"mtime":1607168777734,"results":"142","hashOfConfig":"106"},{"size":4022,"mtime":1600674599610,"results":"143","hashOfConfig":"106"},{"size":3652,"mtime":1600674599615,"results":"144","hashOfConfig":"106"},{"size":2310,"mtime":1600674599613,"results":"145","hashOfConfig":"106"},{"size":4476,"mtime":1600674599614,"results":"146","hashOfConfig":"106"},{"size":4829,"mtime":1600674599604,"results":"147","hashOfConfig":"106"},{"size":212,"mtime":1600674599723,"results":"148","hashOfConfig":"106"},{"size":629,"mtime":1608534003646,"results":"149","hashOfConfig":"106"},{"size":236,"mtime":1601899972183,"results":"150","hashOfConfig":"106"},{"size":240,"mtime":1608534003645,"results":"151","hashOfConfig":"106"},{"size":630,"mtime":1607168777734,"results":"152","hashOfConfig":"106"},{"size":1013,"mtime":1607859443326,"results":"153","hashOfConfig":"106"},{"size":513,"mtime":1600759190329,"results":"154","hashOfConfig":"106"},{"size":440,"mtime":1600674599685,"results":"155","hashOfConfig":"106"},{"size":716,"mtime":1600848495070,"results":"156","hashOfConfig":"106"},{"size":203,"mtime":1600784679177,"results":"157","hashOfConfig":"106"},{"size":1416,"mtime":1601900106966,"results":"158","hashOfConfig":"106"},{"size":1326,"mtime":1600674599732,"results":"159","hashOfConfig":"106"},{"size":900,"mtime":1600674599677,"results":"160","hashOfConfig":"106"},{"size":1938,"mtime":1600674599725,"results":"161","hashOfConfig":"106"},{"size":5291,"mtime":1600674599680,"results":"162","hashOfConfig":"106"},{"size":15450,"mtime":1600674599678,"results":"163","hashOfConfig":"106"},{"size":871,"mtime":1600674599735,"results":"164","hashOfConfig":"106"},{"size":330,"mtime":1607168777736,"results":"165","hashOfConfig":"106"},{"size":527,"mtime":1601899972181,"results":"166","hashOfConfig":"106"},{"size":227,"mtime":1600674599722,"results":"167","hashOfConfig":"106"},{"size":3094,"mtime":1600674599608,"results":"168","hashOfConfig":"106"},{"size":3506,"mtime":1600674599609,"results":"169","hashOfConfig":"106"},{"size":2904,"mtime":1600674599612,"results":"170","hashOfConfig":"106"},{"size":1816,"mtime":1601899972174,"results":"171","hashOfConfig":"106"},{"size":1299,"mtime":1607948990091,"results":"172","hashOfConfig":"106"},{"size":5200,"mtime":1607952763999,"results":"173","hashOfConfig":"106"},{"size":4265,"mtime":1600674599622,"results":"174","hashOfConfig":"106"},{"size":3063,"mtime":1601804271339,"results":"175","hashOfConfig":"106"},{"size":1795,"mtime":1601455274300,"results":"176","hashOfConfig":"106"},{"size":897,"mtime":1600674599627,"results":"177","hashOfConfig":"106"},{"size":1269,"mtime":1600674599626,"results":"178","hashOfConfig":"106"},{"size":731,"mtime":1600674599628,"results":"179","hashOfConfig":"106"},{"size":577,"mtime":1600674599625,"results":"180","hashOfConfig":"106"},{"size":1154,"mtime":1600674599621,"results":"181","hashOfConfig":"106"},{"size":430,"mtime":1600674599704,"results":"182","hashOfConfig":"106"},{"size":169,"mtime":1600674599628,"results":"183","hashOfConfig":"106"},{"size":4796,"mtime":1600674599647,"results":"184","hashOfConfig":"106"},{"size":2564,"mtime":1600674599681,"results":"185","hashOfConfig":"106"},{"size":7377,"mtime":1608534003642,"results":"186","hashOfConfig":"106"},{"size":15785,"mtime":1600674599638,"results":"187","hashOfConfig":"106"},{"size":274,"mtime":1600674599697,"results":"188","hashOfConfig":"106"},{"size":2438,"mtime":1600674599607,"results":"189","hashOfConfig":"106"},{"size":192,"mtime":1600674599700,"results":"190","hashOfConfig":"106"},{"size":248,"mtime":1600674599703,"results":"191","hashOfConfig":"106"},{"size":6270,"mtime":1600674599739,"results":"192","hashOfConfig":"106"},{"size":1264,"mtime":1600674599742,"results":"193","hashOfConfig":"106"},{"size":277,"mtime":1600674599712,"results":"194","hashOfConfig":"106"},{"size":4461,"mtime":1600674599683,"results":"195","hashOfConfig":"106"},{"size":2702,"mtime":1607168777733,"results":"196","hashOfConfig":"106"},{"size":276,"mtime":1600674599716,"results":"197","hashOfConfig":"106"},{"size":333,"mtime":1600674599717,"results":"198","hashOfConfig":"106"},{"size":217,"mtime":1600674599715,"results":"199","hashOfConfig":"106"},{"size":1516,"mtime":1600674599713,"results":"200","hashOfConfig":"106"},{"size":231,"mtime":1600674599709,"results":"201","hashOfConfig":"106"},{"size":244,"mtime":1600674599706,"results":"202","hashOfConfig":"106"},{"size":231,"mtime":1600674599708,"results":"203","hashOfConfig":"106"},{"size":218,"mtime":1600674599707,"results":"204","hashOfConfig":"106"},{"size":224,"mtime":1600674599706,"results":"205","hashOfConfig":"106"},{"size":2002,"mtime":1600674599714,"results":"206","hashOfConfig":"106"},{"size":19718,"mtime":1600674599714,"results":"207","hashOfConfig":"106"},{"size":5336,"mtime":1608534003650,"results":"208","hashOfConfig":"106"},{"size":2451,"mtime":1608534003647,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},"9qwoe6",{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"212"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"212"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"212"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"212"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"212"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"212"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"212"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"212"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"212"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"212"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"212"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"212"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"212"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"212"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Negin\\Client\\src\\index.js",[],["433","434"],"E:\\Negin\\Client\\src\\registerServiceWorker.js",[],"E:\\Negin\\Client\\src\\redux\\store.js",[],"E:\\Negin\\Client\\src\\app\\app.js",["435"],"E:\\Negin\\Client\\src\\components\\spinner\\spinner.js",[],"E:\\Negin\\Client\\src\\redux\\rootReducer.js",[],"E:\\Negin\\Client\\src\\app\\router.js",["436"],"E:\\Negin\\Client\\src\\redux\\customizer\\index.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\index.js",[],"E:\\Negin\\Client\\src\\redux\\common\\voyage\\voyageReducer.js",[],"E:\\Negin\\Client\\src\\redux\\common\\operator\\operatorReducer.js",[],"E:\\Negin\\Client\\src\\redux\\common\\equipment\\equipmentReducer.js",[],"E:\\Negin\\Client\\src\\redux\\common\\damage\\damageReducer.js",[],"E:\\Negin\\Client\\src\\layouts\\routes\\errorRoutes.js",[],"E:\\Negin\\Client\\src\\layouts\\routes\\logoutRoutes.js",[],"E:\\Negin\\Client\\src\\layouts\\routes\\mainRoutes.js",["437","438"],"E:\\Negin\\Client\\src\\views\\pages\\maintainance.js",[],"E:\\Negin\\Client\\src\\views\\pages\\error.js",[],"E:\\Negin\\Client\\src\\views\\dashboard\\ecommerceDashboard.js",["439","440"],"E:\\Negin\\Client\\src\\layouts\\routes\\loginRoutes.jsx",[],"E:\\Negin\\Client\\src\\views\\pages\\logoutPage.jsx",[],"E:\\Negin\\Client\\src\\views\\pages\\loginPage.jsx",["441","442","443","444","445","446","447"],"import React, { useState } from \"react\";\r\nimport { Card, CardBody, Row, Col, Button } from \"reactstrap\";\r\nimport { LogIn } from \"react-feather\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport * as auth from \"../../services/authService\"\r\nimport FormikControl from \"../../components/common/formik/FormikControl\";\r\n\r\nimport { getAreas } from \"../../services/area\";\r\nimport ReactRevealText from 'react-reveal-text'\r\n\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\n//#region INITIAL VALUES ---------------------------------------------------\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n  selectedArea: \"\"\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required(\"Enter Username !\"),\r\n  password: Yup.string().required(\"Enter Password !\")\r\n});\r\n\r\n//#endregion ---------------------------------------------------------------\r\n\r\n//#region SUBMIT FORMIK ----------------------------------------------------\r\n\r\nconst onSubmit = async (values, props) => {\r\n\r\n  let parameters = {\r\n    userName: values.username,\r\n    password: values.password\r\n  };\r\n\r\n  try {\r\n    const { result, message } = await auth.login(_.pick(parameters, [\"userName\", \"password\"]));\r\n    if (!result)\r\n      return toast.error(message);\r\n    else {\r\n      const { state } = props.location;\r\n      console.log(props, state);\r\n      //console.log('ssssssss', props.location.state);\r\n      //window.location = state && state.from ? state.from.pathname : \"/\";\r\n      if (state && state.from)\r\n        return props.history.replace(state && state.from ? state.from.pathname : '/', { ...state.from.state })\r\n      else\r\n        window.location = \"/\";\r\n    }\r\n  } catch (err) {\r\n    if (err.response && err.response.status === 401)\r\n      return toast.error(err.response.data.data[0])\r\n  }\r\n};\r\n//#endregion ---------------------------------------------------------------\r\n\r\nconst LoginPage = (props) => {\r\n\r\n  //#region STATE ------------------------------------------\r\n\r\n  const [state, setState] = useState({\r\n    areaList: []\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const [disableSubmitButton, setDisableSubmitButton] = useState(false);\r\n\r\n  //#endregion -----------------------------------------------------------\r\n\r\n  //#region INITAL FUNCTIONS ---------------------------------------------\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const { message } = props.location.state;\r\n      if (props.location.state && message && message.length > 0) {\r\n        toast.error(message);\r\n      }\r\n    }\r\n\r\n    //console.log('from login effevt', props)\r\n\r\n    setTimeout(() => {\r\n      setShow(true);\r\n    }, 1000);\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let errorMessage = \"\";\r\n  }, []);\r\n\r\n  //#endregion -----------------------------------------------------------\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"container\">\r\n      <Row className=\"full-height-vh\">\r\n        <Col\r\n          xs=\"12\"\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n          <Card className=\" text-center width-400 bg-transparency\" >\r\n            <CardBody>\r\n              <h2 className=\"white py-4\">\r\n                <ReactRevealText show={show}>\r\n                  Negin Terminal Operation System\r\n                </ReactRevealText>\r\n              </h2>\r\n              <div className=\"pt-2\">\r\n\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={async (values) => {\r\n                    //console.log(\"values\", values);\r\n                    await onSubmit(values, props);\r\n                  }}\r\n                  //validateOnBlur={true}\r\n                  validateOnMount={true}\r\n                  enableReinitialize\r\n                >\r\n                  {(formik) => {\r\n                    //console.log(\"Formik props values\", formik);\r\n\r\n                    return (\r\n                      <React.Fragment>\r\n                        <Form>\r\n                          <Row>\r\n                            <Col md=\"12\">\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                id=\"username\"\r\n                                className=\"ltr\"\r\n                                placeholder=\"Username\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col md=\"12\">\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                className=\"ltr\"\r\n                                placeholder=\"Password\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"form-actions center\">\r\n\r\n                            <Button color=\"primary\" type=\"submit\" className=\"mr-1\" disabled={!formik.isValid}>\r\n                              <LogIn size={16} color=\"#FFF\" /> Enter\r\n                            </Button>\r\n\r\n                          </div>\r\n                        </Form>\r\n                      </React.Fragment>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\countriesPage.jsx",["448"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, FormGroup, Row, Col } from \"reactstrap\";\r\nimport { Table } from 'antd';\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport antdClass from 'antd/dist/antd.css';\r\nimport antdClass2 from \"../../../assets/css/vendors/customAntdTable.css\"\r\nimport { getCountries } from \"../../../services/countryService\"\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\n\r\n\r\nconst CountriesPage = () => {\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'countryName',\r\n            key: 'countryName',\r\n            sorter: {\r\n                compare: (a, b) => a.countryName.localeCompare(b.countryName),\r\n                multiple: 4\r\n            },\r\n            sortDirections: ['ascend', 'descend'],\r\n            defaultSortOrder: 'ascend',\r\n        },\r\n        {\r\n            title: 'Symbol',\r\n            dataIndex: 'symbol',\r\n            key: 'symbol'\r\n        }\r\n    ];\r\n\r\n    const [state, setState] = useState({\r\n        listOfCountries: [],\r\n        currentRow: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        getCountries().then(res => {\r\n            if (res.data.result) {\r\n                //console.log('Countries', res);\r\n                const tempList = res.data.data.map(item => {\r\n                    return {\r\n                        key: item.CountryId,\r\n                        countryId: item.CountryId,\r\n                        countryName: item.CountryName,\r\n                        symbol: item.Symbol\r\n                    }\r\n                })\r\n                setState(prevState => ({ ...prevState, ListOfCountries: tempList }))\r\n            }\r\n            else {\r\n                return toast.error(res.data.data[0]);\r\n            }\r\n        }).catch(() => { });\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Row className=\"row-eq-height\">\r\n                <Col sm=\"12\" md=\"12\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <div className=\"form-body\">\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <FormGroup>\r\n                                            <Table\r\n                                                className={antdClass + antdClass2}\r\n                                                columns={columns}\r\n                                                dataSource={state.ListOfCountries}\r\n                                                pagination={{ position: [\"bottomCenter\"] }}\r\n                                                scroll={{ x: 'max-content', y: 200 }}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CountriesPage;","E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageTariffPage.jsx",["449"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, FormGroup, Row, Col } from \"reactstrap\";\r\nimport { ShoppingBag } from \"react-feather\";\r\nimport { Table, Tag } from 'antd';\r\nimport { Formik, Form } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SetValueLabel } from '../../../../utility/tools'\r\n\r\n\r\nimport FormikControl from \"../../../../components/common/formik/FormikControl\";\r\n\r\nimport * as  vss from '../../../../services/vesselStoppageService';\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\n//#region INITIAL VALUES ---------------------------------------------------\r\n\r\nconst initialValues = {\r\n    selectTariff: {}\r\n}\r\n\r\nconst VesselStoppageTariffPage = () => {\r\n\r\n    const [state, setState] = useState({\r\n        ListOfTariffs: [],\r\n        ListOfTariffDetails: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async function fetchAllTariffs() {\r\n            const response = await vss.GetAllTariffs();\r\n            if (response.data.result) {\r\n                let temp = SetValueLabel(response.data.data, 'VesselStoppageTariffId', 'Description')\r\n\r\n                setState((prevState) => ({ ...prevState, ListOfTariffs: temp }));\r\n            }\r\n            else {\r\n                toast.error(response.data.data[0]);\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const handleSelectedTariffChanged = async () => {\r\n        let tariff = await vss.GetTariffDetails(1);\r\n        tariff = tariff.data.data.map(item => {\r\n            return {\r\n                ...item,\r\n                key: item.VesselStoppageTariffDetailId\r\n            }\r\n        })\r\n        console.log('tariff', tariff)\r\n        setState((prevState) => ({ ...prevState, ListOfTariffDetails: tariff }));\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Normal Hour',\r\n            dataIndex: 'NormalHour',\r\n            key: 'NormalHour',\r\n        },\r\n        {\r\n            title: 'Vessel Type',\r\n            dataIndex: 'VesselType',\r\n            key: 'VesselType'\r\n        },\r\n        {\r\n            title: 'Normal Price',\r\n            dataIndex: 'NormalPrice',\r\n            key: 'NormalPrice',\r\n            render: p => (\r\n                <Tag color={'green'}>{\r\n                    p + ' $'\r\n                }</Tag>\r\n            )\r\n        },\r\n        {\r\n            title: 'Extra Price',\r\n            dataIndex: 'ExtraPrice',\r\n            key: 'ExtraPrice',\r\n            render: p => (\r\n                <Tag color={'red'}>{\r\n                    p + ' $'\r\n                }</Tag>\r\n            )\r\n        }]\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n            >\r\n                {\r\n                    () => {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Form>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"customSelect\"\r\n                                                    name=\"selectTariff\"\r\n                                                    options={state.ListOfTariffs ?? []}\r\n                                                    label=\"Vessel stoppage tariffs\"\r\n                                                    onSelectedChanged={\r\n                                                        handleSelectedTariffChanged\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Form>\r\n                                {state.ListOfTariffDetails.length == 0\r\n                                    ? <label>Select a tariff from list above</label>\r\n                                    : <Row className=\"row-eq-height\">\r\n                                        <Col sm=\"12\" md=\"6\">\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"form-body\">\r\n                                                        <Row>\r\n                                                            <Col md='9'>\r\n\r\n                                                                <h4 className=\"form-section\">\r\n                                                                    <ShoppingBag size={20} color=\"#212529\" /> Tariff details\r\n                                    </h4>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <Table\r\n                                                                        columns={columns}\r\n                                                                        dataSource={state.ListOfTariffDetails}\r\n                                                                        pagination={{ position: [\"bottomCenter\"],pageSize:11 }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default VesselStoppageTariffPage;","E:\\Negin\\Client\\src\\views\\pages\\usersPage.jsx",["450","451","452","453","454","455","456","457"],"E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionTariffPage.jsx",["458","459"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, FormGroup, Row, Col } from \"reactstrap\";\r\nimport { ShoppingBag } from \"react-feather\";\r\nimport { Table, Tag } from 'antd';\r\nimport { Formik, Form } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SetValueLabel } from '../../../../utility/tools'\r\n\r\n\r\nimport FormikControl from \"../../../../components/common/formik/FormikControl\";\r\n\r\nimport * as  gcs from '../../../../services/garbageCollectionService';\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\n//#region INITIAL VALUES ---------------------------------------------------\r\n\r\nconst initialValues = {\r\n    selectTariff: {}\r\n}\r\n\r\nconst GarbageCollectionTariffPage = () => {\r\n\r\n    const [state, setState] = useState({\r\n        ListOfTariffs: [],\r\n        ListOfTariffDetails: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async function fetchAllTariffs() {\r\n            const response = await gcs.GetAllTariffs();\r\n            if (response.data.result) {\r\n                let temp = SetValueLabel(response.data.data, 'GarbageCollectionTariffId', 'Description')\r\n\r\n                setState((prevState) => ({ ...prevState, ListOfTariffs: temp }));\r\n            }\r\n            else {\r\n                toast.error(response.data.data[0]);\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    const handleSelectedTariffChanged = async () => {\r\n        let tariff = await gcs.GetTariffDetails(1);\r\n        tariff = tariff.data.data.map(item => {\r\n            return {\r\n                ...item,\r\n                key: item.GarbageCollectionTariffDetailId\r\n            }\r\n        })\r\n        console.log('tariff', tariff)\r\n        setState((prevState) => ({ ...prevState, ListOfTariffDetails: tariff }));\r\n\r\n    }\r\n\r\n    const RenderColor = (value) => {\r\n        switch (value) {\r\n            case 1: return 'green';\r\n            case 2: return 'green';\r\n            case 4: return 'orange';\r\n            case 10: return 'orange';\r\n            case 40: return 'red';\r\n            case 100: return \"red\";\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Weight',\r\n            dataIndex: 'GrossWeight',\r\n            key: 'GrossWeight'\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'Price',\r\n            key: 'Price',\r\n            render: p => (\r\n                <Tag color={RenderColor(p)}>{\r\n                    p\r\n                }</Tag>\r\n            )\r\n        }]\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n            >\r\n                {\r\n                    () => {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Form>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"customSelect\"\r\n                                                    name=\"selectTariff\"\r\n                                                    options={state.ListOfTariffs ?? []}\r\n                                                    label=\"Garbage collections tariffs\"\r\n                                                    onSelectedChanged={\r\n                                                        handleSelectedTariffChanged\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Form>\r\n                                {state.ListOfTariffDetails.length == 0\r\n                                    ? <label>Select a tariff from list above</label>\r\n                                    : <Row className=\"row-eq-height\">\r\n                                        <Col sm=\"12\" md=\"6\">\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"form-body\">\r\n                                                        <Row>\r\n                                                            <Col md='9'>\r\n\r\n                                                                <h4 className=\"form-section\">\r\n                                                                    <ShoppingBag size={20} color=\"#212529\" /> Tariff details\r\n                                    </h4>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md=\"12\">\r\n                                                                <FormGroup>\r\n                                                                    <Table\r\n                                                                        columns={columns}\r\n                                                                        dataSource={state.ListOfTariffDetails}\r\n                                                                        pagination={{ position: [\"bottomCenter\"] }}\r\n                                                                    />\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GarbageCollectionTariffPage;","E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionInvoiceList.jsx",["460","461","462","463"],"E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageBillPage.jsx",["464","465","466","467"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { SetValueLabel, FormatNumber } from '../../../../utility/tools'\r\nimport { Tag } from 'antd';\r\nimport { Formik, Form } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport FormikControl from \"../../../../components/common/formik/FormikControl\";\r\n\r\nimport style from './style/style.css'\r\nimport * as  vss from '../../../../services/vesselStoppageService';\r\nimport * as  vs from '../../../../services/voyageService';\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\nconst initialValues = {\r\n    ListOfVoyages: [],\r\n    voyageData: {},\r\n    issuedBill: {}\r\n}\r\n\r\nconst VesselStoppagePage = () => {\r\n\r\n    const [state, setState] = useState({\r\n        ListOfVoyages: [],\r\n        voyageData: {},\r\n        issuedBill: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async function fetchAllTariffs() {\r\n            const response = await vs.GetLast10Voyages();\r\n            if (response.data.result) {\r\n                let temp = SetValueLabel(response.data.data, 'VoyageId', 'VoyageVessel');\r\n                setState((prevState) => ({ ...prevState, ListOfVoyages: temp }));\r\n            }\r\n            else\r\n                toast.error(response.data.data[0]);\r\n        })();\r\n    }, [])\r\n\r\n    const handleSelectedVoyageChanged = async (param) => {\r\n        await FireUp(param.value);\r\n    }\r\n\r\n    const handleInvoiceClicked = async (isPreInvoice) => {\r\n        try {\r\n            let result = await vss.Calculate(voyageData.VoyageId, isPreInvoice)\r\n            console.log(\"handleInvoiceClicked -> invoice\", result)\r\n            if (result.data.result) {\r\n                let invoice = result.data.data[0];\r\n                if (!isPreInvoice) {\r\n                    toast.success(\r\n                        <div>\r\n                            <p>Invoice issued successfully</p>\r\n                            <p>Invoice-No: {invoice.invoiceNo}</p>\r\n                        </div>);\r\n                    await FireUp(voyageData.VoyageId);\r\n                }\r\n                else\r\n                    toast.success(\r\n                        <div>\r\n                            <p>Preinvoice issued successfully</p>\r\n                            <p>Price: {FormatNumber(invoice.priceD)}$, {FormatNumber(invoice.priceR)}Rial</p>\r\n                        </div>);\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            toast.error(ex.message);\r\n        }\r\n    }\r\n\r\n    const FireUp = async (voyageId) => {\r\n        let response = await vs.getVoyageDetail(voyageId);\r\n        if (response.data.result)\r\n            setState(ps => ({ ...ps, voyageData: response.data.data[0] }))\r\n        else\r\n            toast.error(response.data.data[0]);\r\n    }\r\n\r\n    let { voyageData, ListOfVoyages } = state;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n            >\r\n                {\r\n                    () => {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Form>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"customSelect\"\r\n                                                    name=\"selectTariff\"\r\n                                                    options={ListOfVoyages ?? []}\r\n                                                    label=\"Select voyage\"\r\n                                                    onSelectedChanged={\r\n                                                        handleSelectedVoyageChanged\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-6\">Voyage/vessel: {voyageData.VoyageVessel}</div>\r\n                                        <div className=\"col-6\">Voyage status: <Tag color={voyageData.Status == 'OPEN' ? 'red' : 'green'}>{voyageData.Status}</Tag>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-6\">Voyage-no (in): {voyageData.VoyageNoIn}</div>\r\n                                        <div className=\"col-6\">Voyage-no (out): {voyageData.VoyageNoOut}</div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Nationality: {voyageData.Nationality}</div>\r\n                                        <div className=\"col-4\">Flag: {voyageData.Flag}</div>\r\n                                        <div className=\"col-4\">Call-sign: {voyageData.CallSign}</div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Origin port: {voyageData.OriginPort}</div>\r\n                                        <div className=\"col-4\">Previous port: {voyageData.PreviousPort}</div>\r\n                                        <div className=\"col-4\">Next port: {voyageData.NextPort}</div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Vessel type: {voyageData.VesselType}</div>\r\n                                        <div className=\"col-4\">Vessel length: {voyageData.VesselLength}</div>\r\n                                        <div className=\"col-4\">Gross tonage: {voyageData.GrossTonage}</div>\r\n                                        <div className=\"col-4\">#Bays: {voyageData.NumOfBays}</div>\r\n                                        <div className=\"col-4\">#ActiveCrane: {voyageData.ActiveCraneQty}</div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-3\">Estimated arrival time: {voyageData.ETA}</div>\r\n                                        <div className=\"col-3\">Estimated departure time: {voyageData.ETD}</div>\r\n                                        <div className=\"col-3\">Actual arrival time: {voyageData.ATA}</div>\r\n                                        <div className=\"col-3\">Actual departure time: {voyageData.ATD}</div>\r\n                                    </div>\r\n\r\n                                    <hr hidden={voyageData.vsInvoiceNo == null} />\r\n                                    <div hidden={voyageData.vsInvoiceNo == null} className=\"row details\">\r\n                                        <div className=\"col-3\">Invoice-no: {voyageData.vsInvoiceNo}</div>\r\n                                        <div className=\"col-3\">Invoice Date: {voyageData.vsInvoiceDate}</div>\r\n                                        <div className=\"col-3\">Price($): {voyageData.vsPriceD}</div>\r\n                                        <div className=\"col-3\">Price(R): {voyageData.vsPriceR}</div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                    <div hidden={!voyageData.VoyageId} className=\"row\">\r\n                                        <button disabled={voyageData.Status == 'OPEN' || voyageData.vsInvoiceNo != null} className=\"btn btn-primary ml-3\" onClick={() => handleInvoiceClicked(false)}>Invoice</button>\r\n                                        <button disabled={voyageData.Status == 'OPEN' || voyageData.vsInvoiceNo != null} className=\"btn btn-secondary ml-1\" onClick={() => handleInvoiceClicked(true)}>Pre invoice</button>\r\n                                    </div>\r\n                                </Form>\r\n                            </React.Fragment>\r\n                        )\r\n                    }}\r\n\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default VesselStoppagePage;","E:\\Negin\\Client\\src\\views\\pages\\billing\\garbage-collection\\garbageCollectionBillPage.jsx",["468","469","470","471"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { SetValueLabel, FormatNumber } from '../../../../utility/tools'\r\nimport { Tag } from 'antd';\r\nimport { Formik, Form } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport FormikControl from \"../../../../components/common/formik/FormikControl\";\r\n\r\nimport style from './style/style.css'\r\nimport * as  gcs from '../../../../services/garbageCollectionService';\r\nimport * as  vs from '../../../../services/voyageService';\r\n\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\nconst initialValues = {\r\n    ListOfVoyages: [],\r\n    voyageData: {},\r\n    issuedBill: {}\r\n}\r\n\r\nconst GarbageCollectionBillPage = () => {\r\n\r\n    const [state, setState] = useState({\r\n        ListOfVoyages: [],\r\n        voyageData: {},\r\n        issuedBill: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async function fetchAllTariffs() {\r\n            const response = await vs.GetLast10Voyages();\r\n            if (response.data.result) {\r\n                let temp = SetValueLabel(response.data.data, 'VoyageId', 'VoyageVessel');\r\n                setState((prevState) => ({ ...prevState, ListOfVoyages: temp }));\r\n            }\r\n            else\r\n                toast.error(response.data.data[0]);\r\n        })();\r\n    }, [])\r\n\r\n    const handleSelectedVoyageChanged = async (param) => {\r\n        await FireUp(param.value);\r\n    }\r\n\r\n    const handleInvoiceClicked = async (isPreInvoice) => {\r\n        try {\r\n            let result = await gcs.Calculate(voyageData.VoyageId, isPreInvoice)\r\n            console.log(\"handleInvoiceClicked -> invoice\", result)\r\n            if (result.data.result) {\r\n                let invoice = result.data.data[0];\r\n                if (!isPreInvoice) {\r\n                    toast.success(\r\n                        <div>\r\n                            <p>Invoice issued successfully</p>\r\n                            <p>Invoice-No: {invoice.invoiceNo}</p>\r\n                        </div>);\r\n                    await FireUp(voyageData.VoyageId);\r\n                }\r\n                else\r\n                    toast.success(\r\n                        <div>\r\n                            <p>Preinvoice issued successfully</p>\r\n                            <p>Price: {FormatNumber(invoice.priceD)}$, {FormatNumber(invoice.priceR)}Rial</p>\r\n                        </div>);\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            toast.error(ex.message);\r\n        }\r\n    }\r\n\r\n    const FireUp = async (voyageId) => {\r\n        let response = await vs.getVoyageDetail(voyageId);\r\n        if (response.data.result)\r\n            setState(ps => ({ ...ps, voyageData: response.data.data[0] }))\r\n        else\r\n            toast.error(response.data.data[0]);\r\n    }\r\n\r\n    let { voyageData, ListOfVoyages } = state;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n            >\r\n                {\r\n                    () => {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Form>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"customSelect\"\r\n                                                    name=\"selectTariff\"\r\n                                                    options={ListOfVoyages ?? []}\r\n                                                    label=\"Select voyage\"\r\n                                                    onSelectedChanged={\r\n                                                        handleSelectedVoyageChanged\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-6\">Voyage/vessel: {voyageData.VoyageVessel}</div>\r\n                                        <div className=\"col-6\">Voyage status: <Tag color={voyageData.Status == 'OPEN' ? 'red' : 'green'}>{voyageData.Status}</Tag>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-6\">Voyage-no (in): {voyageData.VoyageNoIn}</div>\r\n                                        <div className=\"col-6\">Voyage-no (out): {voyageData.VoyageNoOut}</div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Nationality: {voyageData.Nationality}</div>\r\n                                        <div className=\"col-4\">Flag: {voyageData.Flag}</div>\r\n                                        <div className=\"col-4\">Call-sign: {voyageData.CallSign}</div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Origin port: {voyageData.OriginPort}</div>\r\n                                        <div className=\"col-4\">Previous port: {voyageData.PreviousPort}</div>\r\n                                        <div className=\"col-4\">Next port: {voyageData.NextPort}</div>\r\n                                    </div>\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-4\">Vessel type: {voyageData.VesselType}</div>\r\n                                        <div className=\"col-4\">Vessel length: {voyageData.VesselLength}</div>\r\n                                        <div className=\"col-4\">Gross tonage: {voyageData.GrossTonage}</div>\r\n                                        <div className=\"col-4\">#Bays: {voyageData.NumOfBays}</div>\r\n                                        <div className=\"col-4\">#ActiveCrane: {voyageData.ActiveCraneQty}</div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row details\">\r\n                                        <div className=\"col-3\">Estimated arrival time: {voyageData.ETA}</div>\r\n                                        <div className=\"col-3\">Estimated departure time: {voyageData.ETD}</div>\r\n                                        <div className=\"col-3\">Actual arrival time: {voyageData.ATA}</div>\r\n                                        <div className=\"col-3\">Actual departure time: {voyageData.ATD}</div>\r\n                                    </div>\r\n\r\n                                    <hr hidden={voyageData.InvoiceNo == null} />\r\n                                    <div hidden={voyageData.InvoiceNo == null} className=\"row details\">\r\n                                        <div className=\"col-3\">Invoice-no: {voyageData.InvoiceNo}</div>\r\n                                        <div className=\"col-3\">Invoice Date: {voyageData.InvoiceDate}</div>\r\n                                        <div className=\"col-3\">Price($): {voyageData.PriceD}</div>\r\n                                        <div className=\"col-3\">Price(R): {voyageData.PriceR}</div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                    <div hidden={!voyageData.VoyageId} className=\"row\">\r\n                                        <button disabled={voyageData.Status == 'OPEN' || voyageData.InvoiceNo != null} className=\"btn btn-primary ml-3\" onClick={() => handleInvoiceClicked(false)}>Invoice</button>\r\n                                        <button disabled={voyageData.Status == 'OPEN' || voyageData.InvoiceNo != null} className=\"btn btn-secondary ml-1\" onClick={() => handleInvoiceClicked(true)}>Pre invoice</button>\r\n                                    </div>\r\n                                </Form>\r\n                            </React.Fragment>\r\n                        )\r\n                    }}\r\n\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GarbageCollectionBillPage;","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\vesselsPage.jsx",[],"E:\\Negin\\Client\\src\\views\\pages\\basic-info\\shippingLinesPage.jsx",["472","473","474"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardBody, Button, FormGroup, Row, Col, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Formik, Form } from \"formik\";\r\nimport { ShoppingBag, Edit2, CheckSquare, X } from \"react-feather\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport FormikControl from \"../../../components/common/formik/FormikControl\";\r\nimport antdClass from 'antd/dist/antd.css';\r\nimport antdClass2 from \"../../../assets/css/vendors/customAntdTable.css\"\r\n\r\n\r\nimport {\r\n    getShippingLines,\r\n    addNewshippingLineInfo,\r\n    editShippingLineInfo\r\n} from \"../../../services/shippingLineService\";\r\n\r\nimport { getCountries } from \"../../../services/countryService\"\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n//#region INITIAL VALUES ---------------------------------------------------\r\n\r\nconst initialValues = {\r\n    shippingLineName: \"\",\r\n    economicCode: \"\",\r\n    tel: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    nationalCode: \"\"\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    shippingLineName: Yup.string().required(\"Entet Shipping Line Name!\"),\r\n    economicCode: Yup.string().required(\"Enter Economic Code!\"),\r\n\r\n});\r\nconst ShippingLinesPage = (props) => {\r\n    const onSubmitEditShippingLine = (values, props) => {\r\n        if (values === state.currentRow) return;\r\n        let parameters = {\r\n            shippingLineId: values.id,\r\n            shippingLineName: values.shippingLineName,\r\n            economicCode: values.economicCode,\r\n            tel: values.tel,\r\n            email: values.email,\r\n            address: values.address,\r\n            nationalCode: values.nationalCode\r\n        };\r\n        editShippingLineInfo(parameters).then(response => {\r\n            console.log('response', response);\r\n            if (response.data.result) {\r\n                toast.success(response.data.data[0]);\r\n                const lstShippingLines = [...state.ListOfShippingLines];\r\n                const index = _(lstShippingLines).findIndex(c => c.shippingLineId === values.id)\r\n                lstShippingLines[index] = { ...lstShippingLines[index] };\r\n                lstShippingLines[index].key = values.id;\r\n                lstShippingLines[index].shippingLineId = values.id;\r\n                lstShippingLines[index].shippingLineName = values.shippingLineName;\r\n                lstShippingLines[index].economicCode = values.economicCode;\r\n                lstShippingLines[index].tel = values.tel;\r\n                lstShippingLines[index].email = values.email;\r\n                lstShippingLines[index].address = values.address;\r\n                lstShippingLines[index].nationalCode = values.nationalCode;\r\n                console.log('from submuit', lstShippingLines[index])\r\n\r\n                setState(prevState => ({ ...prevState, ListOfShippingLines: lstShippingLines, currentRow: {} }));\r\n                editToggle();\r\n            }\r\n            else {\r\n                toast.error(response.data.data[0])\r\n            }\r\n        }).catch(error => { })\r\n    }\r\n    const onSubmitCreateShippingLine = (values, props) => {\r\n        console.log('values', values);\r\n        let parameters = {\r\n            shippingLineName: values.shippingLineName,\r\n            economicCode: values.economicCode,\r\n            tel: values.tel,\r\n            email: values.email,\r\n            address: values.address,\r\n            nationalCode: values.nationalCode\r\n        }\r\n        addNewshippingLineInfo(parameters).then(response => {\r\n            console.log('response', response);\r\n            if (response.data.result) {\r\n                toast.success(response.data.data[0]);\r\n                const lstShippingLines = [...state.ListOfShippingLines];\r\n                getShippingLines().then(res => {\r\n                    if (res.data.result) {\r\n                        console.log('shippingLines', res);\r\n                        const tempList = res.data.data.map(item => {\r\n                            return {\r\n                                key: item.ShippingLineId,\r\n                                shippingLineId: item.ShippingLineId,\r\n                                shippingLineName: item.ShippingLineName,\r\n                                economicCode: item.EconomicCode,\r\n                                tel: item.Tel,\r\n                                address: item.Address,\r\n                                email: item.Email,\r\n                                nationalCode: item.NationalCode\r\n                            }\r\n                        })\r\n                        setState(prevState => ({ ...prevState, ListOfShippingLines: tempList }))\r\n                    }\r\n                    else {\r\n                        return toast.error(res.data.data[0]);\r\n                    }\r\n                }).catch(err => { });\r\n\r\n                createToggle();\r\n            }\r\n            else {\r\n                toast.error(response.data.data[0])\r\n            }\r\n        }).catch(error => { })\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'shippingLineName',\r\n            key: 'shippingLineName',\r\n            sorter: {\r\n                compare: (a, b) => a.shippingLineName.localeCompare(b.shippingLineName),\r\n                multiple: 4\r\n            },\r\n            sortDirections: ['ascend', 'descend'],\r\n            defaultSortOrder: 'ascend',\r\n        },\r\n        {\r\n            title: 'Economic Code',\r\n            dataIndex: 'economicCode',\r\n            key: 'economicCode'\r\n        },\r\n        {\r\n            title: 'Tel',\r\n            dataIndex: 'tel',\r\n            key: 'tel'\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address'\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email'\r\n        },\r\n        {\r\n            title: 'NationalCode',\r\n            dataIndex: 'nationalCode',\r\n            key: 'nationalCode'\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button className=\"btn-warning mt-1\" size=\"sm\" onClick={() => handleEditShippingLine(record)}>\r\n                        <Edit2 size={16} />\r\n                    </Button>\r\n                </Space>\r\n            ),\r\n        }\r\n\r\n    ];\r\n\r\n    const [state, setState] = useState({\r\n\r\n        ListOfShippingLines: [],\r\n        editModal: false,\r\n        createModal: false,\r\n        currentRow: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        getShippingLines().then(res => {\r\n            if (res.data.result) {\r\n                console.log('shippingLines', res);\r\n                const tempList = res.data.data.map(item => {\r\n                    return {\r\n                        key: item.ShippingLineId,\r\n                        shippingLineId: item.ShippingLineId,\r\n                        shippingLineName: item.ShippingLineName,\r\n                        economicCode: item.EconomicCode,\r\n                        tel: item.Tel,\r\n                        address: item.Address,\r\n                        email: item.Email,\r\n                        nationalCode: item.NationalCode\r\n                    }\r\n                })\r\n                setState(prevState => ({ ...prevState, ListOfShippingLines: tempList }))\r\n            }\r\n        }).catch(err => { });\r\n    }, []);\r\n\r\n    const handleEditShippingLine = (shippingLineData) => {\r\n        const ShippingLine = { ..._(state.ListOfShippingLines).filter(c => c.shippingLineId === shippingLineData.shippingLineId).first() };\r\n        const temp = {\r\n            shippingLineName: ShippingLine.shippingLineName,\r\n            tel: ShippingLine.tel,\r\n            email: ShippingLine.email,\r\n            address: ShippingLine.address,\r\n            nationalCode: ShippingLine.nationalCode,\r\n            economicCode: ShippingLine.economicCode,\r\n            id: ShippingLine.shippingLineId\r\n        }\r\n        setState(prevState => ({ ...prevState, currentRow: temp }));\r\n        editToggle();\r\n    }\r\n    const editToggle = () => {\r\n        setState(prevState => ({ ...prevState, editModal: !state.editModal }))\r\n    }\r\n    const handleCancelEditShippingLine = () => {\r\n        setState(prevState => ({ ...prevState, currentRow: {} }));\r\n        editToggle();\r\n    }\r\n    const handleCreateShippingLine = () => {\r\n        setState(prevState => ({ ...prevState, currentRow: {} }))\r\n        createToggle();\r\n    }\r\n    const createToggle = () => {\r\n        setState(prevState => ({ ...prevState, createModal: !state.createModal }))\r\n    }\r\n    const handleCancelCreateShippingLine = () => {\r\n        setState(prevState => ({ ...prevState, currentRow: {} }))\r\n        createToggle();\r\n    }\r\n    return (<React.Fragment>\r\n        <Row className=\"row-eq-height\">\r\n            <Col sm=\"12\" md=\"12\">\r\n                <Card>\r\n                    <CardBody>\r\n                        <div className=\"form-body\">\r\n                            <Row>\r\n                                <Col md='9'>\r\n                                    <h4 className=\"form-section\">\r\n                                        <ShoppingBag size={20} color=\"#212529\" /> Shipping Lines\r\n                                    </h4>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button color=\"success\" type=\"button\" onClick={handleCreateShippingLine}>\r\n                                        Add New Shipping Line\r\n                                </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    <FormGroup>\r\n                                        <Table\r\n                                            className={antdClass + antdClass2}\r\n                                            columns={columns}\r\n                                            dataSource={state.ListOfShippingLines}\r\n                                            pagination={{ position: [\"bottomCenter\"] }}\r\n                                            scroll={{ x: 'max-content', y: 200 }} />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Modal\r\n            isOpen={state.editModal}\r\n            toggle={editToggle}\r\n            className={props.className}\r\n            backdrop=\"static\"\r\n        >\r\n            <ModalHeader toggle={editToggle} >Edit Shipping Line\r\n                <ModalBody>\r\n                    <Formik initialValues={state.currentRow || initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={(values) => {\r\n                            onSubmitEditShippingLine(values, props);\r\n                        }}\r\n                        validateOnBlur={true}\r\n                        enableReinitialize>\r\n                        {(formik) => {\r\n                            console.log(\"Formik props values\", formik.values);\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <Form>\r\n                                        <div className=\"form-body\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        name=\"shippingLineName\"\r\n                                                        className=\"ltr\"\r\n                                                        type='text'\r\n                                                        label=\"shipping Line name\"\r\n                                                        defaultValue={\r\n                                                            state.currentRow.shippingLineName\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        type=\"number\"\r\n                                                        name=\"economicCode\"\r\n                                                        className=\"ltr\"\r\n                                                        label='economic code'\r\n                                                        defaultValue={\r\n                                                            state.currentRow.economicCode\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        type=\"number\"\r\n                                                        name=\"tel\"\r\n                                                        className=\"ltr\"\r\n                                                        label=\"tel\"\r\n                                                        defaultValue={\r\n                                                            state.currentRow.tel\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        type=\"text\"\r\n                                                        name=\"email\"\r\n                                                        className=\"ltr\"\r\n                                                        label=\"email\"\r\n                                                        defaultValue={\r\n                                                            state.currentRow.email\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        type=\"text\"\r\n                                                        name=\"address\"\r\n                                                        className=\"ltr\"\r\n                                                        label=\"address\"\r\n                                                        defaultValue={\r\n                                                            state.currentRow.address\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <FormikControl\r\n                                                        control=\"inputMaskDebounce\"\r\n                                                        name=\"nationalCode\"\r\n                                                        type=\"number\"\r\n                                                        label=\"national code\"\r\n                                                        className=\"ltr\"\r\n                                                        defaultValue={\r\n                                                            state.currentRow.nationalCode\r\n                                                        }\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                        <div className=\"form-actions center\">\r\n                                            <Button color=\"primary\" type=\"submit\" className=\"mr-1\" >\r\n                                                <CheckSquare size={16} color=\"#FFF\" /> Save\r\n                                             </Button>\r\n                                            <Button color=\"warning\" type=\"button\" onClick={handleCancelEditShippingLine} >\r\n                                                <X size={16} color=\"#FFF\" /> Cancel\r\n                                                </Button>\r\n\r\n                                        </div>\r\n                                    </Form>\r\n                                </React.Fragment>\r\n                            );\r\n                        }}\r\n\r\n                    </Formik>\r\n                </ModalBody>\r\n            </ModalHeader>\r\n        </Modal>\r\n\r\n        <Modal\r\n            isOpen={state.createModal}\r\n            toggle={createToggle}\r\n            className={props.className}\r\n            backdrop=\"static\"\r\n        >\r\n            <ModalHeader toggle={createToggle}>Create New Shipping Line</ModalHeader>\r\n            <ModalBody>\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values) => {\r\n                        onSubmitCreateShippingLine(values, props);\r\n                    }}\r\n                    validateOnBlur={true}\r\n                    enableReinitialize\r\n                >\r\n                    {(formik) => {\r\n                        console.log(\"Formik props values\", formik.values);\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Form>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    name=\"shippingLineName\"\r\n                                                    className=\"ltr\"\r\n                                                    type='text'\r\n                                                    label=\"shipping Line name\"\r\n                                                    defaultValue={\r\n                                                        state.currentRow.shippingLineName\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    type=\"number\"\r\n                                                    name=\"economicCode\"\r\n                                                    className=\"ltr\"\r\n                                                    label='economic code'\r\n                                                    defaultValue={\r\n                                                        state.currentRow.economicCode\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    type=\"number\"\r\n                                                    name=\"tel\"\r\n                                                    className=\"ltr\"\r\n                                                    label=\"tel\"\r\n                                                    defaultValue={\r\n                                                        state.currentRow.tel\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    type=\"text\"\r\n                                                    name=\"email\"\r\n                                                    className=\"ltr\"\r\n                                                    label=\"email\"\r\n                                                    defaultValue={\r\n                                                        state.currentRow.email\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    className=\"ltr\"\r\n                                                    label=\"address\"\r\n                                                    defaultValue={\r\n                                                        state.currentRow.address\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <FormikControl\r\n                                                    control=\"inputMaskDebounce\"\r\n                                                    name=\"nationalCode\"\r\n                                                    type=\"number\"\r\n                                                    label=\"national code\"\r\n                                                    className=\"ltr\"\r\n                                                    defaultValue={\r\n                                                        state.currentRow.nationalCode\r\n                                                    }\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <div className=\"form-actions center\">\r\n                                        <Button color=\"primary\" type=\"submit\" className=\"mr-1\" >\r\n                                            <CheckSquare size={16} color=\"#FFF\" /> Save\r\n                         </Button>\r\n                                        <Button color=\"warning\" type=\"button\" onClick={handleCancelCreateShippingLine} >\r\n                                            <X size={16} color=\"#FFF\" /> Cancel\r\n                            </Button>\r\n\r\n                                    </div>\r\n                                </Form>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </ModalBody>\r\n\r\n        </Modal>\r\n\r\n\r\n    </React.Fragment>);\r\n}\r\n\r\nexport default ShippingLinesPage;","E:\\Negin\\Client\\src\\views\\pages\\basic-info\\voyagesPage.jsx",["475","476","477","478","479","480","481","482","483","484","485","486","487"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Table, Space, Switch } from \"antd\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { ShoppingBag, Edit2, CheckSquare, X } from \"react-feather\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport _, { isDate } from \"lodash\";\r\nimport FormikControl from \"../../../components/common/formik/FormikControl\";\r\nimport antdClass from \"antd/dist/antd.css\";\r\nimport antdClass2 from \"../../../assets/css/vendors/customAntdTable.css\";\r\nimport moment from \"jalali-moment\";\r\n\r\nimport {\r\n  addNewVoyageInfo,\r\n  editVoyageInfo,\r\n  getVoyage,\r\n} from \"../../../services/voyageService\";\r\nimport { getVessels } from \"../../../services/vesselService\";\r\nimport { getPorts } from \"../../../services/portServices\";\r\nimport { getShippingLines } from \"../../../services/shippingLineService\";\r\ntoast.configure({ bodyClassName: \"customFont\" });\r\n\r\nconst initialValues = {\r\n  selectVessel: \"\",\r\n  incomingVoyageNo: \"\",\r\n  outgoingVoyageNo: \"\",\r\n  selectOwner: \"\",\r\n  selectAgent: \"\",\r\n  eta: \"\",\r\n  ata: \"\",\r\n  etd: \"\",\r\n  atd: \"\",\r\n  voyageStatus: \"\",\r\n  selectOriginPort: \"\",\r\n  selectPreviousPort: \"\",\r\n  selectNextPort: \"\",\r\n};\r\nconst validationSchema = Yup.object().shape({\r\n  selectVessel: Yup.string().required(\"Entet Vessel Name!\"),\r\n  incomingVoyageNo: Yup.string().required(\"Enter Incoming Voyage Number!\"),\r\n  selectOwner: Yup.string().required(\"Enter Owner Of Voyage!\"),\r\n  selectAgent: Yup.string().required(\"Enter Agent Of Voyage!\"),\r\n  eta: Yup.string().required(\"Enter ETA Date!\")\r\n  // atd: Yup.string()\r\n  //   .when(\"voyageStatus\", {\r\n  //     is: false,\r\n  //     then: Yup.string().test(\"\", \"invalid date\", (value) => //moment(value, \"YYYY-MM-DD HH:mm:ss\",true).isValid()\r\n\r\n  //     {\r\n  //      const asd = moment(undefined).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n  //    //   console.log('asd',asd,value)\r\n  //     }\r\n  //     )\r\n  //   }),\r\n  // voyageStatus: Yup.boolean().required(\"Select Voyage Status!\"),\r\n});\r\nconst VoyagesPage = (props) => {\r\n  const onSubmitEditVoyage = (values) => {\r\n\r\n     console.log('from edit voyage', values)\r\n    // if (values === state.currentRow) return;\r\n    let parameters = {\r\n      voyageId: values.id,\r\n      voyageNoIn: values.incomingVoyageNo,\r\n      voyageNoOut: values.outgoingVoyageNo,\r\n      voyageVessel: values.incomingVoyageNo + '/' + values.selectVessel.label,\r\n      vesselId: values.selectVessel.value,\r\n      ownerId: values.selectOwner.value,\r\n      agentId: values.selectAgent.value,\r\n      estimatedTimeArrival: values.eta,\r\n      actualTimeArrival: values.ata,\r\n      estimatedTimeDeparture: values.etd,\r\n      actualTimeDeparture: values.atd,\r\n      voyageStatus: values.voyageStatus ? 1 : 0,\r\n      originPort: values.selectOriginPort.value,\r\n      previousPort: values.selectPreviousPort.value,\r\n      nextPort: values.selectNextPort.value\r\n    };\r\n    // console.log('from edit voyage after', parameters)\r\n    editVoyageInfo(parameters)\r\n      .then((response) => {\r\n        // console.log('response',response)\r\n        if (response.data.result) {\r\n          toast.success(response.data.data[0]);\r\n          const lstVoyages = [...state.ListOfVoyages];\r\n          const index = _(lstVoyages).findIndex(\r\n            (c) => c.voyageId === values.id\r\n          );\r\n          lstVoyages[index] = { ...lstVoyages[index] };\r\n          lstVoyages[index].key = values.id;\r\n          lstVoyages[index].voyageId = values.id;\r\n          lstVoyages[index].actualTimeArrival = values.ata;\r\n          lstVoyages[index].actualTimeDeparture = values.atd;\r\n          lstVoyages[index].agentId = values.selectAgent.value;\r\n          lstVoyages[index].agentName = values.selectAgent.label;\r\n          lstVoyages[index].estimatedTimeArrival = values.eta;\r\n          lstVoyages[index].estimatedTimeDeparture = values.etd;\r\n          lstVoyages[index].incomingVoyageNo = values.incomingVoyageNo;\r\n          lstVoyages[index].nextPortId = values.selectNextPort.value;\r\n          lstVoyages[index].nextPortName = values.selectNextPort.label;\r\n          lstVoyages[index].originPortId = values.selectOriginPort.value;\r\n          lstVoyages[index].originPortName = values.selectOriginPort.label;\r\n          lstVoyages[index].outgoingVoyageNo = values.outgoingVoyageNo;\r\n          lstVoyages[index].ownerId = values.selectOwner.value;\r\n          lstVoyages[index].ownerName = values.selectOwner.label;\r\n          lstVoyages[index].previousPortId = values.selectPreviousPort.value;\r\n          lstVoyages[index].previousPortName = values.selectPreviousPort.label;\r\n          lstVoyages[index].vesselId = values.selectVessel.value;\r\n          lstVoyages[index].vesselName = values.selectVessel.label;\r\n          lstVoyages[index].voyageStatus = values.voyageStatus ? \"open\" : \"close\";\r\n          lstVoyages[index].voyageStatusCode = values.voyageStatus ? 1 : 0;\r\n          //   console.log(\"from submuit\", lstVoyages[index]);\r\n\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            ListOfVoyages: lstVoyages,\r\n            currentRow: {},\r\n          }));\r\n          editToggle();\r\n        } else {\r\n          toast.error(response.data.data[0]);\r\n        }\r\n      })\r\n  };\r\n\r\n  const onSubmitCreateVoyage = (values) => {\r\n    console.log('from edit voyage', values)\r\n    let parameters = {\r\n      incomingVoyageNo: values.incomingVoyageNo,\r\n      outgoingVoyageNo: values.outgoingVoyageNo,\r\n      voyageVessel: values.incomingVoyageNo + '/' + values.selectVessel.label,\r\n      vesselId: values.selectVessel.value,\r\n      ownerId: values.selectOwner.value,\r\n      agentId: values.selectAgent.value,\r\n      estimatedTimeArrival: values.eta,\r\n      actualTimeArrival: values.ata,\r\n      estimatedTimeDeparture: values.etd,\r\n      actualTimeDeparture: values.atd,\r\n      voyageStatusCode: values.voyageStatus ? 1 : 0,\r\n      originPortId: values.selectOriginPort.value,\r\n      previousPortId: values.selectPreviousPort.value,\r\n      nextPortId: values.selectNextPort.value\r\n    };\r\n    addNewVoyageInfo(parameters)\r\n      .then((response) => {\r\n        // console.log('response',response)\r\n        if (response.data.result) {\r\n          toast.success(response.data.data[0]['message']);\r\n\r\n          const lstVoyages = [...state.ListOfVoyages];\r\n          parameters.voyageId = response.data.data[0]['voyageId'];\r\n          parameters.key = response.data.data[0]['voyageId'];\r\n          parameters.agentName = values.selectAgent.label;\r\n          parameters.incomingVoyageNo = values.incomingVoyageNo;\r\n          parameters.nextPortName = values.selectNextPort.label;\r\n          parameters.originPortName = values.selectOriginPort.label;\r\n          parameters.ownerName = values.selectOwner.label;\r\n          parameters.previousPortName = values.selectPreviousPort.label;\r\n          parameters.vesselName = values.selectVessel.label;\r\n          parameters.voyageStatus = values.voyageStatus ? \"open\" : \"close\";\r\n          lstVoyages.push(parameters);\r\n\r\n          setState((prevState) => ({ ...prevState, ListOfVoyages: lstVoyages, currentRow: {} }));\r\n          createToggle();\r\n        } else {\r\n          toast.error(response.data.data[0]);\r\n        }\r\n      })\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\"> \r\n          <Button\r\n            className=\"btn-warning mt-1\"\r\n            size=\"sm\"\r\n            onClick={() => handleEditVoyage(record)}\r\n          >\r\n            <Edit2 size={16} />\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Incoming Voyage No\",\r\n      dataIndex: \"incomingVoyageNo\",\r\n      key: \"voyageNoIn\",\r\n      sorter: {\r\n        compare: (a, b) => a.incomingVoyageNo.localeCompare(b.incomingVoyageNo),\r\n        multiple: 3,\r\n      },\r\n      sortDirections: [\"ascend\", \"descend\"],\r\n      defaultSortOrder: \"ascend\",\r\n    },\r\n    {\r\n      title: \"Outgoing Voyage No\",\r\n      dataIndex: \"outgoingVoyageNo\",\r\n      key: \"voyageNoOut\",\r\n      sorter: {\r\n        compare: (a, b) => a.outgoingVoyageNo.localeCompare(b.outgoingVoyageNo),\r\n        multiple: 4,\r\n      },\r\n      sortDirections: [\"ascend\", \"descend\"],\r\n      defaultSortOrder: \"ascend\",\r\n    },\r\n    {\r\n      title: \"Vessel\",\r\n      dataIndex: \"vesselName\",\r\n      key: \"vesselName\",\r\n    },\r\n    {\r\n      title: \"Owner\",\r\n      dataIndex: \"ownerName\",\r\n      key: \"wner\",\r\n    },\r\n    {\r\n      title: \"Agent\",\r\n      dataIndex: \"agentName\",\r\n      key: \"agent\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"voyageStatus\",\r\n      key: \"status\",\r\n    },\r\n    {\r\n      title: \"ETA\",\r\n      dataIndex: \"estimatedTimeArrival\",\r\n      key: \"eta\",\r\n    },\r\n    {\r\n      title: \"ATA\",\r\n      dataIndex: \"actualTimeArrival\",\r\n      key: \"ata\",\r\n    },\r\n    {\r\n      title: \"ETD\",\r\n      dataIndex: \"estimatedTimeDeparture\",\r\n      key: \"etd\",\r\n    },\r\n    {\r\n      title: \"ATD\",\r\n      dataIndex: \"actualTimeDeparture\",\r\n      key: \"atd\",\r\n    },\r\n    {\r\n      title: \"Origin Port\",\r\n      dataIndex: \"originPortName\",\r\n      key: \"OriginPort\",\r\n    },\r\n    {\r\n      title: \"Previous Port\",\r\n      dataIndex: \"previousPortName\",\r\n      key: \"previous\",\r\n    },\r\n    {\r\n      title: \"Next Port\",\r\n      dataIndex: \"nextPortName\",\r\n      key: \"nextPort\",\r\n    },\r\n  ];\r\n\r\n  const [validVoyageStatus, setValidVoyageStatus] = useState({\r\n    message: \"\",\r\n    result: true,\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    //ListOfUserTypes: [],\r\n\r\n    ListOfOriginPorts: [],\r\n    ListOfPreviousPorts: [],\r\n    ListOfNextPorts: [],\r\n    ListOfAgents: [],\r\n    ListOfOwners: [],\r\n    ListOfVessels: [],\r\n    ListOfVoyages: [],\r\n    voyageStatus: 1,\r\n    eta: null,\r\n    ata: null,\r\n    etd: null,\r\n    atd: null,\r\n    editModal: false,\r\n    createModal: false,\r\n    currentRow: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    getVoyage()\r\n      .then((res) => {\r\n         console.log('response', res.data.data)\r\n        if (res.data.result) {\r\n          const tempList = res.data.data.map((item) => {\r\n            return {\r\n              key: item.voyageId,\r\n              voyageId: item.voyageId,\r\n              incomingVoyageNo: item.incomingVoyageNo,\r\n              outgoingVoyageNo: item.outgoingVoyageNo,\r\n              estimatedTimeArrival: item.estimatedTimeArrival,\r\n              actualTimeArrival: item.actualTimeArrival,\r\n              estimatedTimeDeparture: item.estimatedTimeDeparture,\r\n              actualTimeDeparture: item.actualTimeDeparture,\r\n              agentId: item.agentId,\r\n              agentName: item.agentName,\r\n              ownerId: item.ownerId,\r\n              ownerName: item.ownerName,\r\n              vesselId: item.vesselId,\r\n              vesselName: item.vesselName,\r\n              previousPortId: item.previousPortId,\r\n              previousPortName: item.previousPortName,\r\n              nextPortId: item.nextPortId,\r\n              nextPortName: item.nextPortName,\r\n              originPortId: item.originPortId,\r\n              originPortName: item.originPortName,\r\n              voyageStatusCode: item.voyageStatusCode,\r\n              voyageStatus: item.voyageStatus,\r\n            };\r\n          });\r\n          //console.log('templist', tempList)\r\n          setState((prevState) => ({ ...prevState, ListOfVoyages: tempList }));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log('error',err)\r\n      });\r\n    getVessels()\r\n      .then((res) => {\r\n        if (res.data.result) {\r\n          const tempList = res.data.data.map((item) => {\r\n            return {\r\n              value: item.VesselId,\r\n              label: item.VesselName,\r\n            };\r\n          });\r\n          setState((prevState) => ({ ...prevState, ListOfVessels: tempList }));\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n\r\n    getPorts()\r\n      .then((res) => {\r\n        if (res.data.result) {\r\n          const temp = res.data.data.map((item) => {\r\n            return { label: item.PortName, value: item.PortId };\r\n          });\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            ListOfOriginPorts: temp,\r\n            ListOfPreviousPorts: temp,\r\n            ListOfNextPorts: temp,\r\n          }));\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n\r\n    getShippingLines()\r\n      .then((res) => {\r\n        if (res.data.result) {\r\n          const temp = res.data.data.map((item) => {\r\n            return { label: item.ShippingLineName, value: item.ShippingLineId };\r\n          });\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            ListOfAgents: temp,\r\n            ListOfOwners: temp,\r\n          }));\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n  }, []);\r\n  const handleEditVoyage = (voyageData) => {\r\n    console.log('from handel voyage edit', voyageData)\r\n    const Voyage = {\r\n      ..._(state.ListOfVoyages)\r\n        .filter((c) => c.voyageId === voyageData.voyageId)\r\n        .first(),\r\n    };\r\n    console.log('from handel voyage List of voyage', Voyage)\r\n    const temp = {\r\n      selectVessel: {\r\n        label: Voyage.vesselName,\r\n        value: Voyage.vesselId,\r\n      },\r\n      selectAgent: {\r\n        label: Voyage.agentName,\r\n        value: Voyage.agentId,\r\n      },\r\n      selectOwner: {\r\n        label: Voyage.ownerName,\r\n        value: Voyage.ownerId,\r\n      },\r\n      selectOriginPort: {\r\n        label: Voyage.originPortName,\r\n        value: Voyage.originPortId,\r\n      },\r\n      selectNextPort: {\r\n        label: Voyage.nextPortName,\r\n        value: Voyage.nextPortId,\r\n      },\r\n      selectPreviousPort: {\r\n        label: Voyage.previousPortName,\r\n        value: Voyage.previousPortId,\r\n      },\r\n      eta: Voyage.estimatedTimeArrival,\r\n      ata: Voyage.actualTimeArrival,\r\n      etd: Voyage.estimatedTimeDeparture,\r\n      atd: Voyage.actualTimeDeparture,\r\n      voyageStatus: Voyage.voyageStatus,\r\n      voyageStatusCode: Voyage.voyageStatusCode,\r\n      outgoingVoyageNo: Voyage.outgoingVoyageNo,\r\n      incomingVoyageNo: Voyage.incomingVoyageNo,\r\n      id: Voyage.voyageId,\r\n    };\r\n\r\n    setState((prevState) => ({ ...prevState, currentRow: temp }));\r\n    setTimeout(() => {\r\n      console.log('current row ', temp)\r\n      \r\n    }, 1000);\r\n    editToggle();\r\n  };\r\n\r\n  const editToggle = () => {\r\n    setState((prevState) => ({ ...prevState, editModal: !state.editModal }));\r\n  };\r\n\r\n  const handleCancelEditVoyage = () => {\r\n    setState((prevState) => ({ ...prevState, currentRow: {} }));\r\n    editToggle();\r\n  };\r\n\r\n  const handleCreateVoyage = () => {\r\n    setState((prevState) => ({ ...prevState, currentRow: {} }));\r\n    createToggle();\r\n  };\r\n\r\n  const createToggle = () => {\r\n    setState((prevState) => ({ ...prevState, createModal: !state.createModal }));\r\n  };\r\n\r\n  const handleCancelCreateVoyage = () => {\r\n    setState((prevState) => ({ ...prevState, currentRow: {} }));\r\n    createToggle();\r\n  };\r\n  const handleVesselSelectedChanged = (value) => {\r\n    //console.log(\"from hande vessel \", value);\r\n  };\r\n  const handleOwnerSelectedChanged = () => { };\r\n  const handleAgentSelectedChanged = () => { };\r\n  const handlePreviousPortSelectedChanged = () => { };\r\n  const handleOriginPortSelectedChanged = () => { };\r\n  const handleNextPortSelectedChanged = () => { };\r\n  const handleStatustSelectedChanged = (value, formik) => {\r\n   console.log('from handle status ', value)\r\n    if (!value) {\r\n\r\n      formik.setFieldTouched('atd',true);\r\n    }\r\n  };\r\n  const dtChange1 = (value) => { };\r\n  const dtChange2 = (value) => { };\r\n  console.log(\"from status change\", state.currentRow);\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"row-eq-height\">\r\n        <Col sm=\"12\" md=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              {/* <CardTitle>Users</CardTitle> */}\r\n              {/* <CardText>With supporting text below as a natural lead-in to additional content.</CardText> */}\r\n              {/* <Form> */}\r\n              <div className=\"form-body\">\r\n                <Row>\r\n                  <Col md=\"9\">\r\n                    <h4 className=\"form-section\">\r\n                      <ShoppingBag size={20} color=\"#212529\" /> Voyages\r\n                    </h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      color=\"success\"\r\n                      type=\"button\"\r\n                      onClick={handleCreateVoyage}\r\n                    >\r\n                      Add New Voyage\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <Table\r\n                        className={antdClass + antdClass2}\r\n                        columns={columns}\r\n                        dataSource={state.ListOfVoyages}\r\n                        pagination={{ position: [\"bottomCenter\"] }}\r\n                        scroll={{ x: 2700, y: 200 }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              {/* </Form> */}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        isOpen={state.editModal}\r\n        toggle={editToggle}\r\n        className={props.className}\r\n        backdrop=\"static\"\r\n      >\r\n        <ModalHeader toggle={editToggle}>\r\n          Edit Voyage: {state.currentRow.incomingVoyageNo}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Formik\r\n            initialValues={state.currentRow}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => {\r\n              onSubmitEditVoyage(values);\r\n            }}\r\n            // validateOnBlur={true}\r\n            validateOnChange={true}\r\n            validateOnMount={true}\r\n            enableReinitialize\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <Form>\r\n                    <div className=\"form-body\">\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectVessel\"\r\n                            selectedValue={state.currentRow.selectVessel}\r\n                            options={state.ListOfVessels}\r\n                            label=\"Vessel Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectOriginPort\"\r\n                            selectedValue={state.currentRow.selectOriginPort}\r\n                            options={state.ListOfOriginPorts}\r\n                            label=\"Origin Port Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectNextPort\"\r\n                            selectedValue={state.currentRow.selectNextPort}\r\n                            options={state.ListOfNextPorts}\r\n                            label=\"Next Port Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectPreviousPort\"\r\n                            selectedValue={state.currentRow.selectPreviousPort}\r\n                            options={state.ListOfPreviousPorts}\r\n                            label=\"Previous Port Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectAgent\"\r\n                            selectedValue={state.currentRow.selectAgent}\r\n                            options={state.ListOfAgents}\r\n                            label=\"Agent Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectOwner\"\r\n                            selectedValue={state.currentRow.selectOwner}\r\n                            options={state.ListOfOwners}\r\n                            label=\"Owner Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"inputMaskDebounce\"\r\n                            name=\"incomingVoyageNo\"\r\n                            className=\"ltr\"\r\n                            type=\"text\"\r\n                            label=\"Incoming Voyage No\"\r\n                            defaultValue={state.currentRow.incomingVoyageNo}\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"inputMaskDebounce\"\r\n                            type=\"text\"\r\n                            name=\"outgoingVoyageNo\"\r\n                            className=\"ltr\"\r\n                            label=\"Outgoing Voyage No\"\r\n                            defaultValue={state.currentRow.outgoingVoyageNo}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"eta\"\r\n                            locale=\"en\"\r\n                            label=\"Estimated Time Arrival\"\r\n                            placeholder=\"Select Enter Date\"\r\n                            selectedValue={\r\n                              state.currentRow && state.currentRow.eta\r\n                                ? state.currentRow.eta\r\n                                : null\r\n                            }\r\n                            //defaultValue={{ day: 14, month: 7, year: 1399 }}\r\n                            onSelectedChanged={dtChange1}\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"ata\"\r\n                            label=\"Actual Time Arrival\"\r\n                            placeholder=\"Select Enter Date\"\r\n                            selectedValue={\r\n                              state.currentRow && state.currentRow.ata\r\n                                ? state.currentRow.ata\r\n                                : null\r\n                            }\r\n                            //defaultValue={{ day: 10, month: 6, year: 1399 }}\r\n                            onSelectedChanged={dtChange2}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"etd\"\r\n                            label=\"Estimated Time Departure\"\r\n                            placeholder=\"Select Enter Date\"\r\n                            selectedValue={\r\n                              state.currentRow && state.currentRow.etd\r\n                                ? state.currentRow.etd\r\n                                : null\r\n                            }\r\n                            //defaultValue={{ day: 14, month: 7, year: 1399 }}\r\n                            onSelectedChanged={dtChange1}\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"atd\"\r\n                            label=\"Actual Time Departure\"\r\n                            placeholder=\"Select Enter Date\"\r\n                            selectedValue={\r\n                              state.currentRow && state.currentRow.atd\r\n                                ? state.currentRow.atd\r\n                                : null\r\n                            }\r\n                            onSelectedChanged={dtChange2}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col\r\n                          md=\"4\"\r\n                          style={{\r\n                            justifyContent: \"right\",\r\n                            direction: \"rtl\",\r\n                            display: \"flex\",\r\n                          }}\r\n                        >\r\n                          <FormikControl\r\n                            control=\"customSwitch\"\r\n                            name=\"voyageStatus\"\r\n                            label=\"Voyage Status\"\r\n                            unCheckedChildren=\"Close\"\r\n                            checkedChildren=\"Open\"\r\n                            selectedValue={\r\n                              state.currentRow && state.currentRow.voyageStatus === 'open'? true : false\r\n                            }\r\n                            onSelectedChanged={(value) =>\r\n                              handleStatustSelectedChanged(value, formik)\r\n                            }\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"form-actions center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1\"\r\n                        disabled={!formik.isValid}\r\n                      >\r\n                        <CheckSquare size={16} color=\"#FFF\" /> Save\r\n                      </Button>\r\n                      <Button\r\n                        color=\"warning\"\r\n                        type=\"button\"\r\n                        onClick={handleCancelEditVoyage}\r\n                      >\r\n                        <X size={16} color=\"#FFF\" /> Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </React.Fragment>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={state.createModal}\r\n        toggle={editToggle}\r\n        className={props.className}\r\n        backdrop=\"static\"\r\n      >\r\n        <ModalHeader toggle={createToggle}>\r\n          Add New Voyage\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={(values) => {\r\n              onSubmitCreateVoyage(values);\r\n            }}\r\n            // validateOnBlur={true}\r\n            validateOnChange={true}\r\n            validateOnMount={true}\r\n            enableReinitialize\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <Form>\r\n                    <div className=\"form-body\">\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectVessel\"\r\n                            options={state.ListOfVessels}\r\n                            label=\"Vessel Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectOriginPort\"\r\n                            options={state.ListOfOriginPorts}\r\n                            label=\"Origin Port Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectNextPort\"\r\n                            options={state.ListOfNextPorts}\r\n                            label=\"Next Port Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectPreviousPort\"\r\n                            options={state.ListOfPreviousPorts}\r\n                            label=\"Previous Port Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectAgent\"\r\n                            options={state.ListOfAgents}\r\n                            label=\"Agent Name\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customSelect\"\r\n                            name=\"selectOwner\"\r\n                            options={state.ListOfOwners}\r\n                            label=\"Owner Name\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"inputMaskDebounce\"\r\n                            name=\"incomingVoyageNo\"\r\n                            className=\"ltr\"\r\n                            type=\"text\"\r\n                            label=\"Incoming Voyage No\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"inputMaskDebounce\"\r\n                            type=\"text\"\r\n                            name=\"outgoingVoyageNo\"\r\n                            className=\"ltr\"\r\n                            label=\"Outgoing Voyage No\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"eta\"\r\n                            locale=\"en\"\r\n                            label=\"Estimated Time Arrival\"\r\n                            placeholder=\"Select Enter Date\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"ata\"\r\n                            label=\"Actual Time Arrival\"\r\n                            placeholder=\"Select Enter Date\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"etd\"\r\n                            label=\"Estimated Time Departure\"\r\n                            placeholder=\"Select Enter Date\"\r\n                          />\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormikControl\r\n                            control=\"customDateTimePicker\"\r\n                            name=\"atd\"\r\n                            label=\"Actual Time Departure\"\r\n                            placeholder=\"Select Enter Date\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col\r\n                          md=\"4\"\r\n                          style={{\r\n                            justifyContent: \"right\",\r\n                            direction: \"rtl\",\r\n                            display: \"flex\",\r\n                          }}\r\n                        >\r\n                          <FormikControl\r\n                            control=\"customSwitch\"\r\n                            name=\"voyageStatus\"\r\n                            label=\"Voyage Status\"\r\n                            unCheckedChildren=\"close\"\r\n                            checkedChildren=\"open\"\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"form-actions center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1\"\r\n                        disabled={!formik.isValid}\r\n                      >\r\n                        <CheckSquare size={16} color=\"#FFF\" /> Save\r\n                      </Button>\r\n                      <Button\r\n                        color=\"warning\"\r\n                        type=\"button\"\r\n                        onClick={handleCancelCreateVoyage}\r\n                      >\r\n                        <X size={16} color=\"#FFF\" /> Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </React.Fragment>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </ModalBody>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default VoyagesPage;\r\n","E:\\Negin\\Client\\src\\redux\\common\\damage\\damageTypes.js",[],"E:\\Negin\\Client\\src\\layouts\\errorLayout.js",[],"E:\\Negin\\Client\\src\\layouts\\mainLayout.js",[],"E:\\Negin\\Client\\src\\layouts\\logoutLayout.js",[],"E:\\Negin\\Client\\src\\services\\authService.js",["488"],"import http from \"./httpService\";\r\nimport { toast } from \"react-toastify\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport * as CryptoJS from \"crypto-js\";\r\n\r\nimport { apiUrl, tokenHashKey } from \"../config.json\";\r\n\r\n\r\nconst apiEndpoint = apiUrl + \"/auth/authentication\";\r\nconst tokenKey = \"token\";\r\n\r\n\r\ntoast.configure({ bodyClassName: \"rtl\" });\r\n\r\nexport async function login(user) {\r\n  const { data } = await http.post(apiEndpoint, user);\r\n  //console.log(\"from authserv\", data)\r\n  if (data.result) {\r\n    const jwt = data.data[0].token;\r\n    localStorage.setItem(tokenKey, jwt);\r\n    return { result: true, message: null };\r\n  }\r\n  return { result: false, message: data.data[0] };\r\n}\r\n\r\nexport function logout() {\r\n  console.log('logoutttt')\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = CryptoJS.AES.decrypt(\r\n      localStorage.getItem(\"token\"),\r\n      tokenHashKey\r\n    ).toString(CryptoJS.enc.Utf8);\r\n    const decToken = jwtDecode(jwt);\r\n    // console.log('decode toke', decToken);\r\n    if (decToken.exp < Date.now() / 1000) {\r\n      toast.error(\"Your credential is expired, Please login again\");\r\n      logout();\r\n      return null;\r\n    }\r\n    return decToken;\r\n\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","E:\\Negin\\Client\\src\\components\\cards\\projectStatsDonutChartCard.js",[],"E:\\Negin\\Client\\src\\components\\cards\\weeklyStatisticsLineChartCard.js",[],"E:\\Negin\\Client\\src\\components\\cards\\userListCard.js",[],"E:\\Negin\\Client\\src\\components\\cards\\visitSalesStatistics.js",[],"E:\\Negin\\Client\\src\\components\\cards\\hobbiesStatisticsBarChartCard.js",[],"E:\\Negin\\Client\\src\\services\\countryService.js",[],"E:\\Negin\\Client\\src\\services\\vesselStoppageService.js",[],"E:\\Negin\\Client\\src\\services\\userType.js",[],"E:\\Negin\\Client\\src\\services\\permission.js",[],"E:\\Negin\\Client\\src\\services\\garbageCollectionService.js",[],"E:\\Negin\\Client\\src\\services\\voyageService.js",[],"E:\\Negin\\Client\\src\\services\\shippingLineService.js",[],"E:\\Negin\\Client\\src\\layouts\\loginLayout.jsx",[],"E:\\Negin\\Client\\src\\services\\vesselService.js",[],"E:\\Negin\\Client\\src\\services\\portServices.js",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\FormikControl.jsx",[],"E:\\Negin\\Client\\src\\templateConfig.js",[],"E:\\Negin\\Client\\src\\layouts\\components\\footer\\footer.js",[],"E:\\Negin\\Client\\src\\services\\httpService.js",["489","490"],"import axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.interceptors.response.use(res => {\r\n  //console.log('interceptor response', res.data.token);\r\n  if (res.status === 200 && res.data.token) {\r\n    //console.log('new token', res.data.token)\r\n    localStorage.setItem('token', res.data.token)\r\n  }\r\n\r\n  return Promise.resolve(res);\r\n})\r\n\r\naxios.interceptors.request.use(req => {\r\n  //console.log('set http jewt', localStorage.getItem('token'))\r\n  req.headers.common['x-auth-token'] = localStorage.getItem('token');\r\n  return req\r\n})\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  // console.log('from http service', error.response)\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  //console.log(\"error\", error);\r\n  if (!expectedError) {\r\n    // status code 500\r\n    toast.error(\"خطا در برقراری ارتباط با سرور. لطفا با ادمین سایت تماس بگیرید\");\r\n    console.log(error.response, error); // eeno bayad log begirim\r\n    //toastr.error('Server Error','An Unexpected error occured!')\r\n  }\r\n\r\n  if (expectedError) {\r\n    switch (error.response.status) {\r\n\r\n      case 400:\r\n        toast.error('اطلاعات وارد شده صحیح نمی باشد');\r\n        break;\r\n      case 401:\r\n        toast.error('کاربری با مشخصات وارد شده یافت نشد');\r\n        break;\r\n      case 403:\r\n        toast.error('دسترسی غیر مجاز');\r\n        break;\r\n      case 404:\r\n        toast.error('سرویس مورد نظر یافت نشد');\r\n        break;\r\n    }\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  //console.log('set http jewt',jwt)\r\n  //axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt: setJwt\r\n};\r\n","E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidebar.js",[],"E:\\Negin\\Client\\src\\layouts\\components\\navbar\\navbar.js",[],"E:\\Negin\\Client\\src\\utility\\context\\toggleContentContext.js",[],"E:\\Negin\\Client\\src\\utility\\tools.js",[],"E:\\Negin\\Client\\src\\services\\user.js",[],"E:\\Negin\\Client\\src\\services\\area.js",[],"E:\\Negin\\Client\\src\\components\\cards\\monthlySalesStatisticsBarChartCard.js",[],"E:\\Negin\\Client\\src\\components\\cards\\productsSalesChartCard.js",[],"E:\\Negin\\Client\\src\\components\\cards\\shoppingCartCard.js",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\CustomCheckboxGroup.jsx",["491","492","493","494","495"],"import React from \"react\";\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nimport { FormGroup, Row } from \"reactstrap\";\r\nimport { Checkbox } from 'antd';\r\nimport antdClass from 'antd/dist/antd.css';\r\nimport antdClass2 from \"../../../assets/css/vendors/customAntdTable.css\";\r\n\r\nconst CheckboxGroup = (props) => {\r\n    const { label, name, options, disabled, defaultValue, className, ...rest } = props;\r\n    const classN = \"form-control \" + className;\r\n    return (\r\n        <FormGroup>\r\n            {/* <Row> */}\r\n            <Field name={name} {...rest} className={classN}>\r\n                {({ form, meta }) => {\r\n                    console.log(\"Field\", options);\r\n                    return (\r\n                        <div>\r\n                            <Checkbox.Group\r\n                                disabled={disabled}\r\n                                options={options}\r\n                                name={name}\r\n                                defaultValue={defaultValue}\r\n                                onChange={(checkedValues) => {\r\n                                    if (props.onSelectedChange)\r\n                                        props.onSelectedChange(checkedValues);\r\n                                    form.setFieldValue(name, checkedValues);\r\n                                }}\r\n                            />\r\n                            {meta.touched && meta.error ? (\r\n                                <div className=\"error\">{meta.error}</div>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Field>\r\n            {/* <ErrorMessage name={name} component={TextError} /> */}\r\n            {/* </Row> */}\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport default CheckboxGroup;\r\n","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomSwitch.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\CustomDateTimePicker.jsx",["496","497","498","499","500","501","502"],"import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup, Label, Row, Col, FormGroup } from \"reactstrap\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport _ from \"lodash\";\r\nimport DatePicker, { utils } from \"react-modern-calendar-datepicker\";\r\nimport InputMaskDebounce from \"./InputMaskDebounce\";\r\nimport { TimePicker } from \"antd\";\r\nimport moment from \"jalali-moment\";\r\nimport TextError from \"./TextError\";\r\n\r\nclass CustomDateTimePicker extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { selectedValue } = this.props;\r\n    console.log(\"props from \", this.props);\r\n    this.state = {\r\n      selectedDate: \"\",\r\n      selectedTime: \"\",\r\n    };\r\n    if (selectedValue != null && selectedValue !== \"\") {\r\n      const date = this.convertDateTo(selectedValue, \"fa\"); // 1392/6/31 23:59:59);\r\n      var formatedDate = {\r\n        year: parseInt(date[0]),\r\n        month: parseInt(date[1]),\r\n        day: parseInt(date[2]),\r\n      };\r\n      const time = moment(selectedValue, \"YYYY-M-D HH:mm:ss\")\r\n        .locale(\"fa\")\r\n        .format(\"HH:mm:ss\"); //23:59:59\r\n      this.state = {\r\n        selectedDate: formatedDate,\r\n        selectedTime: time,\r\n      };\r\n    }\r\n  }\r\n  convertDateTo = (date, locale) => {\r\n    switch (locale) {\r\n      case \"fa\":\r\n        let result = moment(date, \"YYYY-M-D HH:mm:ss\")\r\n          .locale(locale)\r\n          .format(\"YYYY/M/D\")\r\n          .split(\"/\"); // 1392/6/31);\r\n        return result;\r\n      case \"en\":\r\n        let result1 = moment.from(date, \"fa\", \"YYYY/M/D\").format(\"YYYY-M-D\"); // 2013-8-25 16:40:00\r\n        return result1;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  getMiladiDate = (value) => {\r\n    const formatedDate = `${value.year}/${value.month}/${value.day}`;\r\n    const miladiDate = this.convertDateTo(formatedDate, \"en\");\r\n    return miladiDate;\r\n  };\r\n  handleSelectedDateChanged = (value, form) => {\r\n    const miladiDate = this.getMiladiDate(value);\r\n    this.setState({\r\n      selectedDate: value,\r\n      selectedTime: this.state.selectedTime,\r\n    });\r\n    if (this.props.onSelectedChanged)\r\n      this.props.onSelectedChanged(miladiDate + \" \" + this.state.selectedTime);\r\n\r\n    form.setFieldValue(\r\n      this.props.name,\r\n      miladiDate + \" \" + this.state.selectedTime\r\n    );\r\n  };\r\n\r\n  handleSelectedTimeChanged = (TimeString, form) => {\r\n    this.setState({ ...this.state, selectedTime: TimeString });\r\n\r\n    const miladiDate = this.getMiladiDate(this.state.selectedDate);\r\n    if (this.props.onSelectedChanged)\r\n      this.props.onSelectedChanged(miladiDate + \" \" + TimeString);\r\n\r\n    form.setFieldValue(this.props.name, miladiDate + \" \" + TimeString);\r\n  };\r\n\r\n  render() {\r\n    const { label, name, placeholder } = this.props;\r\n    const minimumDate = {\r\n      year: 1398,\r\n      month: 12,\r\n      day: 29\r\n    };\r\n    const maximumDate = {\r\n      year: 1420,\r\n      month: 12,\r\n      day: 29\r\n    }\r\n    return (\r\n      <FormGroup>\r\n        {label !== null && label !== \"\" && <Label for={name}>{label}</Label>}\r\n        <Field name={name}>\r\n          {(fieldProps) => {\r\n            const { form, meta } = fieldProps;\r\n            // console.log(\"meta \", meta);\r\n            return (\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col md=\"6\" sm=\"6\" style={{ paddingRight: \"1px\" }}>\r\n                    <DatePicker\r\n                    minimumDate={minimumDate}\r\n                    maximumDate = {maximumDate}\r\n                  shouldHighlightWeekends\r\n                      wrapperClassName=\"form-control\"\r\n                      value={this.state.selectedDate}\r\n                      onChange={(value) =>\r\n                        this.handleSelectedDateChanged(value, form)\r\n                      }\r\n                      colorPrimary=\"rgb(57, 124, 182)\" // added this\r\n                      calendarClassName=\"custom-calendar\" // and this\r\n                      calendarTodayClassName=\"custom-today-day\" // also this\r\n                      locale=\"fa\"\r\n                      inputClassName=\"customSize\"\r\n                      inputPlaceholder={placeholder}\r\n                      shouldHighlightWeekends\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"6\" sm=\"6\" style={{ padding: \"1px 15px 1px 1px\" }}>\r\n                    <TimePicker\r\n                      disabled={!this.state.selectedDate}\r\n                      value={\r\n                        this.state.selectedTime\r\n                          ? moment(this.state.selectedTime, \"HH:mm:ss\")\r\n                          : \"\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      size=\"large\"\r\n                      onChange={(time, TimeString) =>\r\n                        this.handleSelectedTimeChanged(TimeString, form)\r\n                      }\r\n                      onBlur={() => form.setFieldTouched(name, true)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <ErrorMessage name={name} component={TextError} />\r\n              </React.Fragment>\r\n            );\r\n          }}\r\n        </Field>\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomDateTimePicker;\r\n","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomButtonGroup.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\InputMaskDebounce.jsx",["503"],"import React, { Component } from \"react\";\r\nimport ReactInputMask from \"react-input-mask\";\r\nimport _ from \"lodash\";\r\nimport { Field } from \"formik\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\n\r\nclass InputMaskDebounce extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mask: this.props.mask ? this.props.mask : '',\r\n      value: ''\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (event, form) => {\r\n    //console.log('event',event)\r\n    // console.log('props',this.props);\r\n    event.persist();\r\n    const { debounceTime, name, toUppercase } = this.props;\r\n    const defaultDebounceTime = debounceTime && debounceTime != 0 ? debounceTime : 0;\r\n    if (!this.debouncedFn) {\r\n      this.debouncedFn = _.debounce(() => {\r\n        if (event.target) {\r\n          const temp = { ...this.state };\r\n          temp.value = event.target.value;\r\n          this.setState({ mask: temp.mask, value: temp.value });\r\n          if (this.state.mask !== \"\" && this.state.mask.length > 0) {\r\n            if (_(event.target.value).replace(\"_\", \"\").length === this.state.mask.length) {\r\n              // console.log(event.target.value);\r\n              form.setFieldValue(name, toUppercase ? _(temp.value).toUpper() : temp.value);\r\n              if (this.props.onChange)\r\n                this.props.onChange();\r\n            }\r\n            else {\r\n              //form.setFieldValue(name, temp.value);\r\n            }\r\n          } else {\r\n            form.setFieldValue(name, toUppercase ? _(temp.value).toUpper() : temp.value);\r\n            if (this.props.onChange)\r\n              this.props.onChange();\r\n          }\r\n\r\n          //console.log(searchString)\r\n        }\r\n      }, defaultDebounceTime);\r\n    }\r\n    this.debouncedFn();\r\n  };\r\n  render() {\r\n    const { label, name, className, placeholder, defaultValue, type } = this.props;\r\n    const classN = \"form-control \" + className;\r\n    const defaultType = this.props.mask ? 'text' : type ? type : 'text';\r\n    return (\r\n      <FormGroup>\r\n        {label !== null && label !== \"\" && <Label for={name}>{label}</Label>}\r\n        <Field name={name}>\r\n          {(Fieldprops) => {\r\n            const { form, meta } = Fieldprops;\r\n            //console.log(this.state);\r\n            // console.log('mask debounce props', Fieldprops);\r\n            return (\r\n              <React.Fragment>\r\n                <ReactInputMask\r\n                  type={defaultType}\r\n                  mask={this.state.mask}\r\n                  id={name}\r\n                  onBlur={() => form.setFieldTouched(name, true)}\r\n                  onChange={(event) => this.onChange(event, form)}\r\n                  placeholder={placeholder}\r\n                  className={classN}\r\n                  defaultValue={defaultValue}\r\n                />\r\n                {meta.touched && (meta.error) ? (\r\n                  <div className=\"error\">{meta.error}</div>\r\n                ) : null}\r\n              </React.Fragment>\r\n            );\r\n          }}\r\n        </Field>\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputMaskDebounce;\r\n","E:\\Negin\\Client\\src\\components\\common\\formik\\CustomSelect.jsx",["504","505"],"import React from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { useState } from \"react\";\r\n\r\nconst CustomSelect = (props) => {\r\n  const {\r\n    label,\r\n    name,\r\n    options,\r\n    className,\r\n    selectedValue,\r\n    placeholder,\r\n    isMulti,\r\n    ...rest\r\n  } = props;\r\n  // const [temp,setTemp]=useState([])\r\n  // setTimeout(() => {\r\n  //   setTemp(options)\r\n  // }, 5000);\r\n  const classN = className ? className : \"ltr\";\r\n  return (\r\n    <FormGroup>\r\n      {label !== null && label !== \"\" && <Label for={name}>{label}</Label>}\r\n      <Field name={name} as=\"select\">\r\n        {(fieldProps) => {\r\n          const { form, meta } = fieldProps;\r\n          //console.log(\"Render props\", props);\r\n          return (\r\n            <div>\r\n              <Select\r\n                isMulti={isMulti ? true : false}\r\n                className={\r\n                  isMulti\r\n                    ? `basic-single ${classN}`\r\n                    : `basic-multi-select ${classN}`\r\n                }\r\n                classNamePrefix=\"select\"\r\n                defaultValue={selectedValue}\r\n                name={name}\r\n                options={options}\r\n                placeholder={placeholder}\r\n                onChange={(value) => {\r\n                  form.setFieldValue(name, value);\r\n                  if (props.onSelectedChanged) props.onSelectedChanged(value);\r\n                }}\r\n                onBlur={() => form.setFieldTouched(name, true)}\r\n              />\r\n              {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Field>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","E:\\Negin\\Client\\src\\components\\common\\formik\\Select.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\RadioButtons.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\Textarea.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\Input.jsx",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\CheckboxGroup.jsx",[],"E:\\Negin\\Client\\src\\redux\\customizer\\customizerActions.js",[],"E:\\Negin\\Client\\src\\components\\common\\formik\\TextError.jsx",[],"E:\\Negin\\Client\\src\\components\\search\\Search.js",[],"E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidebarHeader\\sidebarHeader.js",[],"E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidemenu\\sidemenu.js",["506","507","508","509","510","511"],"E:\\Negin\\Client\\src\\components\\customizer\\customizer.js",[],"E:\\Negin\\Client\\src\\redux\\common\\equipment\\equipmentTypes.js",[],"E:\\Negin\\Client\\src\\components\\cards\\minimalStatisticsWithChartCard.js",[],"E:\\Negin\\Client\\src\\redux\\common\\operator\\operatorTypes.js",[],"E:\\Negin\\Client\\src\\redux\\common\\voyage\\voyageTypes.js",[],"E:\\Negin\\Client\\src\\views\\cards\\advancedCardData.js",[],"E:\\Negin\\Client\\src\\views\\cards\\staticCardData.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\editTodo.js",[],"E:\\Negin\\Client\\src\\layouts\\components\\sidebar\\sidemenuHelper.js",[],"E:\\Negin\\Client\\src\\mockData\\menuList.jsx",[],"E:\\Negin\\Client\\src\\redux\\todo\\todoSearch.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\todoVisibilityFilter.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\todoDetails.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\todo.js",[],"E:\\Negin\\Client\\src\\redux\\customizer\\sidebarSize.js",[],"E:\\Negin\\Client\\src\\redux\\customizer\\sidebarCollapsed.js",[],"E:\\Negin\\Client\\src\\redux\\customizer\\sidebarImageUrl.js",[],"E:\\Negin\\Client\\src\\redux\\customizer\\sidebarImage.js",[],"E:\\Negin\\Client\\src\\redux\\customizer\\sidebarBgColor.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\todoActions.js",[],"E:\\Negin\\Client\\src\\redux\\todo\\todoData.js",[],"E:\\Negin\\Client\\src\\views\\pages\\billing\\vessel-stoppage\\vessel-stoppageInvoiceList.jsx",["512","513","514"],"E:\\Negin\\Client\\src\\views\\pages\\Tree.jsx",["515"],{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":9,"column":10,"nodeType":"522","messageId":"523","endLine":9,"endColumn":23},{"ruleId":"520","severity":1,"message":"524","line":3,"column":33,"nodeType":"522","messageId":"523","endLine":3,"endColumn":41},{"ruleId":"520","severity":1,"message":"525","line":2,"column":17,"nodeType":"522","messageId":"523","endLine":2,"endColumn":26},{"ruleId":"520","severity":1,"message":"526","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":12},{"ruleId":"520","severity":1,"message":"527","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"528","line":2,"column":10,"nodeType":"522","messageId":"523","endLine":2,"endColumn":15},{"ruleId":"520","severity":1,"message":"529","line":12,"column":10,"nodeType":"522","messageId":"523","endLine":12,"endColumn":18},{"ruleId":"520","severity":1,"message":"530","line":67,"column":10,"nodeType":"522","messageId":"523","endLine":67,"endColumn":15},{"ruleId":"520","severity":1,"message":"531","line":67,"column":17,"nodeType":"522","messageId":"523","endLine":67,"endColumn":25},{"ruleId":"520","severity":1,"message":"532","line":71,"column":10,"nodeType":"522","messageId":"523","endLine":71,"endColumn":29},{"ruleId":"520","severity":1,"message":"533","line":71,"column":31,"nodeType":"522","messageId":"523","endLine":71,"endColumn":53},{"ruleId":"534","severity":1,"message":"535","line":91,"column":6,"nodeType":"536","endLine":91,"endColumn":8,"suggestions":"537"},{"ruleId":"520","severity":1,"message":"538","line":94,"column":9,"nodeType":"522","messageId":"523","endLine":94,"endColumn":21},{"ruleId":"520","severity":1,"message":"539","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":9},{"ruleId":"540","severity":1,"message":"541","line":113,"column":67,"nodeType":"542","messageId":"543","endLine":113,"endColumn":69},{"ruleId":"520","severity":1,"message":"544","line":5,"column":29,"nodeType":"522","messageId":"523","endLine":5,"endColumn":37},{"ruleId":"520","severity":1,"message":"545","line":11,"column":13,"nodeType":"522","messageId":"523","endLine":11,"endColumn":20},{"ruleId":"546","severity":1,"message":"547","line":174,"column":39,"nodeType":"548","messageId":"549","endLine":174,"endColumn":41},{"ruleId":"546","severity":1,"message":"547","line":229,"column":34,"nodeType":"548","messageId":"549","endLine":229,"endColumn":36},{"ruleId":"546","severity":1,"message":"547","line":274,"column":39,"nodeType":"548","messageId":"549","endLine":274,"endColumn":41},{"ruleId":"546","severity":1,"message":"547","line":285,"column":30,"nodeType":"548","messageId":"549","endLine":285,"endColumn":32},{"ruleId":"546","severity":1,"message":"547","line":321,"column":34,"nodeType":"548","messageId":"549","endLine":321,"endColumn":36},{"ruleId":"540","severity":1,"message":"541","line":418,"column":50,"nodeType":"542","messageId":"543","endLine":418,"endColumn":52},{"ruleId":"550","severity":1,"message":"551","line":57,"column":9,"nodeType":"552","messageId":"553","endLine":64,"endColumn":10},{"ruleId":"540","severity":1,"message":"541","line":109,"column":67,"nodeType":"542","messageId":"543","endLine":109,"endColumn":69},{"ruleId":"520","severity":1,"message":"554","line":13,"column":10,"nodeType":"522","messageId":"523","endLine":13,"endColumn":22},{"ruleId":"520","severity":1,"message":"555","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":17},{"ruleId":"520","severity":1,"message":"556","line":17,"column":8,"nodeType":"522","messageId":"523","endLine":17,"endColumn":18},{"ruleId":"520","severity":1,"message":"557","line":18,"column":8,"nodeType":"522","messageId":"523","endLine":18,"endColumn":13},{"ruleId":"520","severity":1,"message":"557","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":110,"column":109,"nodeType":"542","messageId":"543","endLine":110,"endColumn":111},{"ruleId":"540","severity":1,"message":"541","line":153,"column":77,"nodeType":"542","messageId":"543","endLine":153,"endColumn":79},{"ruleId":"540","severity":1,"message":"541","line":154,"column":77,"nodeType":"542","messageId":"543","endLine":154,"endColumn":79},{"ruleId":"520","severity":1,"message":"557","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":111,"column":109,"nodeType":"542","messageId":"543","endLine":111,"endColumn":111},{"ruleId":"540","severity":1,"message":"541","line":154,"column":77,"nodeType":"542","messageId":"543","endLine":154,"endColumn":79},{"ruleId":"540","severity":1,"message":"541","line":155,"column":77,"nodeType":"542","messageId":"543","endLine":155,"endColumn":79},{"ruleId":"520","severity":1,"message":"558","line":3,"column":17,"nodeType":"522","messageId":"523","endLine":3,"endColumn":20},{"ruleId":"520","severity":1,"message":"559","line":20,"column":10,"nodeType":"522","messageId":"523","endLine":20,"endColumn":22},{"ruleId":"520","severity":1,"message":"560","line":89,"column":23,"nodeType":"522","messageId":"523","endLine":89,"endColumn":39},{"ruleId":"520","severity":1,"message":"561","line":13,"column":24,"nodeType":"522","messageId":"523","endLine":13,"endColumn":30},{"ruleId":"520","severity":1,"message":"562","line":14,"column":10,"nodeType":"522","messageId":"523","endLine":14,"endColumn":23},{"ruleId":"520","severity":1,"message":"563","line":14,"column":25,"nodeType":"522","messageId":"523","endLine":14,"endColumn":38},{"ruleId":"520","severity":1,"message":"564","line":19,"column":13,"nodeType":"522","messageId":"523","endLine":19,"endColumn":19},{"ruleId":"520","severity":1,"message":"565","line":23,"column":8,"nodeType":"522","messageId":"523","endLine":23,"endColumn":14},{"ruleId":"520","severity":1,"message":"566","line":279,"column":10,"nodeType":"522","messageId":"523","endLine":279,"endColumn":27},{"ruleId":"520","severity":1,"message":"567","line":279,"column":29,"nodeType":"522","messageId":"523","endLine":279,"endColumn":49},{"ruleId":"520","severity":1,"message":"568","line":461,"column":9,"nodeType":"522","messageId":"523","endLine":461,"endColumn":36},{"ruleId":"520","severity":1,"message":"569","line":464,"column":9,"nodeType":"522","messageId":"523","endLine":464,"endColumn":35},{"ruleId":"520","severity":1,"message":"570","line":465,"column":9,"nodeType":"522","messageId":"523","endLine":465,"endColumn":35},{"ruleId":"520","severity":1,"message":"571","line":466,"column":9,"nodeType":"522","messageId":"523","endLine":466,"endColumn":42},{"ruleId":"520","severity":1,"message":"572","line":467,"column":9,"nodeType":"522","messageId":"523","endLine":467,"endColumn":40},{"ruleId":"520","severity":1,"message":"573","line":468,"column":9,"nodeType":"522","messageId":"523","endLine":468,"endColumn":38},{"ruleId":"574","severity":1,"message":"575","line":55,"column":1,"nodeType":"576","endLine":60,"endColumn":3},{"ruleId":"550","severity":1,"message":"551","line":36,"column":5,"nodeType":"552","messageId":"553","endLine":50,"endColumn":6},{"ruleId":"574","severity":1,"message":"575","line":61,"column":1,"nodeType":"576","endLine":67,"endColumn":3},{"ruleId":"520","severity":1,"message":"577","line":2,"column":10,"nodeType":"522","messageId":"523","endLine":2,"endColumn":22},{"ruleId":"520","severity":1,"message":"578","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":17},{"ruleId":"520","severity":1,"message":"579","line":4,"column":21,"nodeType":"522","messageId":"523","endLine":4,"endColumn":24},{"ruleId":"520","severity":1,"message":"555","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":17},{"ruleId":"520","severity":1,"message":"556","line":7,"column":8,"nodeType":"522","messageId":"523","endLine":7,"endColumn":18},{"ruleId":"520","severity":1,"message":"580","line":2,"column":10,"nodeType":"522","messageId":"523","endLine":2,"endColumn":16},{"ruleId":"520","severity":1,"message":"581","line":2,"column":18,"nodeType":"522","messageId":"523","endLine":2,"endColumn":29},{"ruleId":"520","severity":1,"message":"539","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":9},{"ruleId":"520","severity":1,"message":"582","line":5,"column":22,"nodeType":"522","messageId":"523","endLine":5,"endColumn":27},{"ruleId":"520","severity":1,"message":"583","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":25},{"ruleId":"520","severity":1,"message":"584","line":101,"column":27,"nodeType":"522","messageId":"523","endLine":101,"endColumn":31},{"ruleId":"585","severity":1,"message":"586","line":122,"column":23,"nodeType":"587","endLine":122,"endColumn":46},{"ruleId":"540","severity":1,"message":"588","line":22,"column":62,"nodeType":"542","messageId":"543","endLine":22,"endColumn":64},{"ruleId":"520","severity":1,"message":"589","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":18},{"ruleId":"520","severity":1,"message":"590","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":12},{"ruleId":"540","severity":1,"message":"588","line":48,"column":26,"nodeType":"542","messageId":"543","endLine":48,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":54,"column":38,"nodeType":"542","messageId":"543","endLine":54,"endColumn":40},{"ruleId":"540","severity":1,"message":"541","line":74,"column":31,"nodeType":"542","messageId":"543","endLine":74,"endColumn":33},{"ruleId":"540","severity":1,"message":"541","line":114,"column":29,"nodeType":"542","messageId":"543","endLine":114,"endColumn":31},{"ruleId":"591","severity":1,"message":"592","line":162,"column":10,"nodeType":"593","endLine":165,"endColumn":9},{"ruleId":"591","severity":1,"message":"592","line":224,"column":39,"nodeType":"593","endLine":227,"endColumn":7},{"ruleId":"520","severity":1,"message":"555","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":17},{"ruleId":"520","severity":1,"message":"556","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":18},{"ruleId":"520","severity":1,"message":"557","line":17,"column":8,"nodeType":"522","messageId":"523","endLine":17,"endColumn":13},{"ruleId":"520","severity":1,"message":"527","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'urls' is defined but never used.","'Component' is defined but never used.","'Slide' is defined but never used.","'getAreas' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'disableSubmitButton' is assigned a value but never used.","'setDisableSubmitButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["596"],"'errorMessage' is assigned a value but never used.","'_' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Checkbox' is defined but never used.","'forEach' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FormatNumber' is defined but never used.","'antdClass' is defined but never used.","'antdClass2' is defined but never used.","'style' is defined but never used.","'Tag' is defined but never used.","'getCountries' is defined but never used.","'lstShippingLines' is assigned a value but never used.","'Switch' is defined but never used.","'CloseOutlined' is defined but never used.","'CheckOutlined' is defined but never used.","'isDate' is defined but never used.","'moment' is defined but never used.","'validVoyageStatus' is assigned a value but never used.","'setValidVoyageStatus' is assigned a value but never used.","'handleVesselSelectedChanged' is assigned a value but never used.","'handleOwnerSelectedChanged' is assigned a value but never used.","'handleAgentSelectedChanged' is assigned a value but never used.","'handlePreviousPortSelectedChanged' is assigned a value but never used.","'handleOriginPortSelectedChanged' is assigned a value but never used.","'handleNextPortSelectedChanged' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ErrorMessage' is defined but never used.","'TextError' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'utils' is defined but never used.","'InputMaskDebounce' is defined but never used.","'meta' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'rest' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-global-assign","no-unsafe-negation",{"desc":"597","fix":"598"},"Update the dependencies array to be: [props.location.state]",{"range":"599","text":"600"},[2788,2790],"[props.location.state]"]